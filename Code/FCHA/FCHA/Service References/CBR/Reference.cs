//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FCHA.CBR {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://web.cbr.ru/", ConfigurationName="CBR.DailyInfoSoap")]
    public interface DailyInfoSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SaldoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SaldoXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SaldoXML", ReplyAction="*")]
        System.IAsyncResult BeginSaldoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndSaldoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/ROISfixXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ROISfixXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/ROISfixXML", ReplyAction="*")]
        System.IAsyncResult BeginROISfixXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndROISfixXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/RuoniaXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode RuoniaXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/RuoniaXML", ReplyAction="*")]
        System.IAsyncResult BeginRuoniaXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndRuoniaXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OstatDepoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode OstatDepoXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OstatDepoXML", ReplyAction="*")]
        System.IAsyncResult BeginOstatDepoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndOstatDepoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OstatDepo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet OstatDepo(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OstatDepo", ReplyAction="*")]
        System.IAsyncResult BeginOstatDepo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndOstatDepo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/ROISfix", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ROISfix(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/ROISfix", ReplyAction="*")]
        System.IAsyncResult BeginROISfix(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndROISfix(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Ruonia", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Ruonia(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Ruonia", ReplyAction="*")]
        System.IAsyncResult BeginRuonia(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndRuonia(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/mrrf7D", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mrrf7D(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/mrrf7D", ReplyAction="*")]
        System.IAsyncResult Beginmrrf7D(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet Endmrrf7D(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/mrrf7DXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode mrrf7DXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/mrrf7DXML", ReplyAction="*")]
        System.IAsyncResult Beginmrrf7DXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode Endmrrf7DXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/mrrf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet mrrf(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/mrrf", ReplyAction="*")]
        System.IAsyncResult Beginmrrf(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet Endmrrf(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/mrrfXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode mrrfXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/mrrfXML", ReplyAction="*")]
        System.IAsyncResult BeginmrrfXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndmrrfXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Saldo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Saldo(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Saldo", ReplyAction="*")]
        System.IAsyncResult BeginSaldo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndSaldo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/NewsInfoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode NewsInfoXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/NewsInfoXML", ReplyAction="*")]
        System.IAsyncResult BeginNewsInfoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndNewsInfoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OmodInfoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode OmodInfoXML();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OmodInfoXML", ReplyAction="*")]
        System.IAsyncResult BeginOmodInfoXML(System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndOmodInfoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/XVol", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet XVol(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/XVol", ReplyAction="*")]
        System.IAsyncResult BeginXVol(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndXVol(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/XVolXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode XVolXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/XVolXML", ReplyAction="*")]
        System.IAsyncResult BeginXVolXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndXVolXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/MainInfoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode MainInfoXML();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/MainInfoXML", ReplyAction="*")]
        System.IAsyncResult BeginMainInfoXML(System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndMainInfoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/AllDataInfoXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode AllDataInfoXML();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/AllDataInfoXML", ReplyAction="*")]
        System.IAsyncResult BeginAllDataInfoXML(System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndAllDataInfoXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/NewsInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet NewsInfo(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/NewsInfo", ReplyAction="*")]
        System.IAsyncResult BeginNewsInfo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndNewsInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginSwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndSwapDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapInfoSellUSDVolXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SwapInfoSellUSDVolXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapInfoSellUSDVolXML", ReplyAction="*")]
        System.IAsyncResult BeginSwapInfoSellUSDVolXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndSwapInfoSellUSDVolXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapInfoSellUSDVol", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SwapInfoSellUSDVol(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapInfoSellUSDVol", ReplyAction="*")]
        System.IAsyncResult BeginSwapInfoSellUSDVol(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndSwapInfoSellUSDVol(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapInfoSellUSD", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SwapInfoSellUSD(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapInfoSellUSD", ReplyAction="*")]
        System.IAsyncResult BeginSwapInfoSellUSD(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndSwapInfoSellUSD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapInfoSellUSDXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SwapInfoSellUSDXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapInfoSellUSDXML", ReplyAction="*")]
        System.IAsyncResult BeginSwapInfoSellUSDXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndSwapInfoSellUSDXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/BiCurBaseXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode BiCurBaseXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/BiCurBaseXML", ReplyAction="*")]
        System.IAsyncResult BeginBiCurBaseXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndBiCurBaseXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/BiCurBase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BiCurBase(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/BiCurBase", ReplyAction="*")]
        System.IAsyncResult BeginBiCurBase(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndBiCurBase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/BiCurBacketXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode BiCurBacketXML();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/BiCurBacketXML", ReplyAction="*")]
        System.IAsyncResult BeginBiCurBacketXML(System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndBiCurBacketXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/BiCurBacket", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet BiCurBacket();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/BiCurBacket", ReplyAction="*")]
        System.IAsyncResult BeginBiCurBacket(System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndBiCurBacket(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SwapDynamic(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapDynamic", ReplyAction="*")]
        System.IAsyncResult BeginSwapDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndSwapDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapMonthTotal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet SwapMonthTotal(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapMonthTotal", ReplyAction="*")]
        System.IAsyncResult BeginSwapMonthTotal(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndSwapMonthTotal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/SwapMonthTotalXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SwapMonthTotalXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/SwapMonthTotalXML", ReplyAction="*")]
        System.IAsyncResult BeginSwapMonthTotalXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndSwapMonthTotalXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/MKR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet MKR(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/MKR", ReplyAction="*")]
        System.IAsyncResult BeginMKR(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndMKR(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/MKRXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode MKRXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/MKRXML", ReplyAction="*")]
        System.IAsyncResult BeginMKRXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndMKRXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DV", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DV(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DV", ReplyAction="*")]
        System.IAsyncResult BeginDV(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndDV(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DVXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DVXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DVXML", ReplyAction="*")]
        System.IAsyncResult BeginDVXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndDVXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Repo_debt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Repo_debt(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Repo_debt", ReplyAction="*")]
        System.IAsyncResult BeginRepo_debt(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndRepo_debt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Repo_debtXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Repo_debtXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Repo_debtXML", ReplyAction="*")]
        System.IAsyncResult BeginRepo_debtXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndRepo_debtXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Coins_base", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Coins_base(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Coins_base", ReplyAction="*")]
        System.IAsyncResult BeginCoins_base(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndCoins_base(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Coins_baseXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Coins_baseXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Coins_baseXML", ReplyAction="*")]
        System.IAsyncResult BeginCoins_baseXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndCoins_baseXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/FixingBase", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet FixingBase(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/FixingBase", ReplyAction="*")]
        System.IAsyncResult BeginFixingBase(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndFixingBase(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/FixingBaseXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode FixingBaseXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/FixingBaseXML", ReplyAction="*")]
        System.IAsyncResult BeginFixingBaseXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndFixingBaseXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Overnight", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Overnight(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Overnight", ReplyAction="*")]
        System.IAsyncResult BeginOvernight(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndOvernight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OvernightXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode OvernightXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OvernightXML", ReplyAction="*")]
        System.IAsyncResult BeginOvernightXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndOvernightXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/Bauction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet Bauction(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/Bauction", ReplyAction="*")]
        System.IAsyncResult BeginBauction(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndBauction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/BauctionXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode BauctionXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/BauctionXML", ReplyAction="*")]
        System.IAsyncResult BeginBauctionXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndBauctionXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DepoDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DepoDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginDepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndDepoDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DepoDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DepoDynamic(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DepoDynamic", ReplyAction="*")]
        System.IAsyncResult BeginDepoDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndDepoDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OstatDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode OstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OstatDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginOstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndOstatDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/OstatDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet OstatDynamic(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/OstatDynamic", ReplyAction="*")]
        System.IAsyncResult BeginOstatDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndOstatDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DragMetDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DragMetDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginDragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndDragMetDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/DragMetDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet DragMetDynamic(System.DateTime fromDate, System.DateTime ToDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/DragMetDynamic", ReplyAction="*")]
        System.IAsyncResult BeginDragMetDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndDragMetDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetLatestDateTime", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime GetLatestDateTime();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetLatestDateTime", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestDateTime(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetLatestDateTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetLatestDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLatestDate();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetLatestDate", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestDate(System.AsyncCallback callback, object asyncState);
        
        string EndGetLatestDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetLatestDateTimeSeld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.DateTime GetLatestDateTimeSeld();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetLatestDateTimeSeld", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestDateTimeSeld(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetLatestDateTimeSeld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetLatestDateSeld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetLatestDateSeld();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetLatestDateSeld", ReplyAction="*")]
        System.IAsyncResult BeginGetLatestDateSeld(System.AsyncCallback callback, object asyncState);
        
        string EndGetLatestDateSeld(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/EnumValutesXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode EnumValutesXML(bool Seld);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/EnumValutesXML", ReplyAction="*")]
        System.IAsyncResult BeginEnumValutesXML(bool Seld, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndEnumValutesXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/EnumValutes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet EnumValutes(bool Seld);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/EnumValutes", ReplyAction="*")]
        System.IAsyncResult BeginEnumValutes(bool Seld, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndEnumValutes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetCursDynamicXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetCursDynamicXML", ReplyAction="*")]
        System.IAsyncResult BeginGetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndGetCursDynamicXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetCursDynamic", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetCursDynamic", ReplyAction="*")]
        System.IAsyncResult BeginGetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetCursDynamic(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetCursOnDateXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCursOnDateXML(System.DateTime On_date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetCursOnDateXML", ReplyAction="*")]
        System.IAsyncResult BeginGetCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndGetCursOnDateXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetSeldCursOnDateXML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSeldCursOnDateXML(System.DateTime On_date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetSeldCursOnDateXML", ReplyAction="*")]
        System.IAsyncResult BeginGetSeldCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState);
        
        System.Xml.XmlNode EndGetSeldCursOnDateXML(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetSeldCursOnDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetSeldCursOnDate(System.DateTime On_date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetSeldCursOnDate", ReplyAction="*")]
        System.IAsyncResult BeginGetSeldCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetSeldCursOnDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://web.cbr.ru/GetCursOnDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetCursOnDate(System.DateTime On_date);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://web.cbr.ru/GetCursOnDate", ReplyAction="*")]
        System.IAsyncResult BeginGetCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState);
        
        System.Data.DataSet EndGetCursOnDate(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DailyInfoSoapChannel : FCHA.CBR.DailyInfoSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaldoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaldoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ROISfixXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ROISfixXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RuoniaXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RuoniaXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OstatDepoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OstatDepoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OstatDepoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OstatDepoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ROISfixCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ROISfixCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RuoniaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RuoniaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class mrrf7DCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public mrrf7DCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class mrrf7DXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public mrrf7DXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class mrrfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public mrrfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class mrrfXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public mrrfXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaldoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaldoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewsInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OmodInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OmodInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XVolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public XVolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XVolXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public XVolXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MainInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MainInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AllDataInfoXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AllDataInfoXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwapDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwapInfoSellUSDVolXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapInfoSellUSDVolXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwapInfoSellUSDVolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapInfoSellUSDVolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwapInfoSellUSDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapInfoSellUSDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwapInfoSellUSDXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapInfoSellUSDXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BiCurBaseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BiCurBaseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BiCurBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BiCurBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BiCurBacketXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BiCurBacketXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BiCurBacketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BiCurBacketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwapDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwapMonthTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapMonthTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwapMonthTotalXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SwapMonthTotalXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MKRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MKRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MKRXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MKRXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DVXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DVXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Repo_debtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Repo_debtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Repo_debtXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Repo_debtXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Coins_baseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Coins_baseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Coins_baseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Coins_baseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FixingBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FixingBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FixingBaseXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FixingBaseXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OvernightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OvernightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OvernightXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OvernightXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BauctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BauctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BauctionXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BauctionXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepoDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DepoDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DepoDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DepoDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OstatDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OstatDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OstatDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OstatDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DragMetDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DragMetDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DragMetDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DragMetDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestDateTimeSeldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestDateTimeSeldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestDateSeldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestDateSeldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnumValutesXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnumValutesXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnumValutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnumValutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCursDynamicXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCursDynamicXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCursDynamicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCursDynamicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeldCursOnDateXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeldCursOnDateXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Xml.XmlNode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeldCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeldCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCursOnDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCursOnDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Data.DataSet Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DailyInfoSoapClient : System.ServiceModel.ClientBase<FCHA.CBR.DailyInfoSoap>, FCHA.CBR.DailyInfoSoap {
        
        private BeginOperationDelegate onBeginSaldoXMLDelegate;
        
        private EndOperationDelegate onEndSaldoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onSaldoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginROISfixXMLDelegate;
        
        private EndOperationDelegate onEndROISfixXMLDelegate;
        
        private System.Threading.SendOrPostCallback onROISfixXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginRuoniaXMLDelegate;
        
        private EndOperationDelegate onEndRuoniaXMLDelegate;
        
        private System.Threading.SendOrPostCallback onRuoniaXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginOstatDepoXMLDelegate;
        
        private EndOperationDelegate onEndOstatDepoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onOstatDepoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginOstatDepoDelegate;
        
        private EndOperationDelegate onEndOstatDepoDelegate;
        
        private System.Threading.SendOrPostCallback onOstatDepoCompletedDelegate;
        
        private BeginOperationDelegate onBeginROISfixDelegate;
        
        private EndOperationDelegate onEndROISfixDelegate;
        
        private System.Threading.SendOrPostCallback onROISfixCompletedDelegate;
        
        private BeginOperationDelegate onBeginRuoniaDelegate;
        
        private EndOperationDelegate onEndRuoniaDelegate;
        
        private System.Threading.SendOrPostCallback onRuoniaCompletedDelegate;
        
        private BeginOperationDelegate onBeginmrrf7DDelegate;
        
        private EndOperationDelegate onEndmrrf7DDelegate;
        
        private System.Threading.SendOrPostCallback onmrrf7DCompletedDelegate;
        
        private BeginOperationDelegate onBeginmrrf7DXMLDelegate;
        
        private EndOperationDelegate onEndmrrf7DXMLDelegate;
        
        private System.Threading.SendOrPostCallback onmrrf7DXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginmrrfDelegate;
        
        private EndOperationDelegate onEndmrrfDelegate;
        
        private System.Threading.SendOrPostCallback onmrrfCompletedDelegate;
        
        private BeginOperationDelegate onBeginmrrfXMLDelegate;
        
        private EndOperationDelegate onEndmrrfXMLDelegate;
        
        private System.Threading.SendOrPostCallback onmrrfXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaldoDelegate;
        
        private EndOperationDelegate onEndSaldoDelegate;
        
        private System.Threading.SendOrPostCallback onSaldoCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsInfoXMLDelegate;
        
        private EndOperationDelegate onEndNewsInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onNewsInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginOmodInfoXMLDelegate;
        
        private EndOperationDelegate onEndOmodInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onOmodInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginXVolDelegate;
        
        private EndOperationDelegate onEndXVolDelegate;
        
        private System.Threading.SendOrPostCallback onXVolCompletedDelegate;
        
        private BeginOperationDelegate onBeginXVolXMLDelegate;
        
        private EndOperationDelegate onEndXVolXMLDelegate;
        
        private System.Threading.SendOrPostCallback onXVolXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginMainInfoXMLDelegate;
        
        private EndOperationDelegate onEndMainInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onMainInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginAllDataInfoXMLDelegate;
        
        private EndOperationDelegate onEndAllDataInfoXMLDelegate;
        
        private System.Threading.SendOrPostCallback onAllDataInfoXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewsInfoDelegate;
        
        private EndOperationDelegate onEndNewsInfoDelegate;
        
        private System.Threading.SendOrPostCallback onNewsInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapDynamicXMLDelegate;
        
        private EndOperationDelegate onEndSwapDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onSwapDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapInfoSellUSDVolXMLDelegate;
        
        private EndOperationDelegate onEndSwapInfoSellUSDVolXMLDelegate;
        
        private System.Threading.SendOrPostCallback onSwapInfoSellUSDVolXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapInfoSellUSDVolDelegate;
        
        private EndOperationDelegate onEndSwapInfoSellUSDVolDelegate;
        
        private System.Threading.SendOrPostCallback onSwapInfoSellUSDVolCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapInfoSellUSDDelegate;
        
        private EndOperationDelegate onEndSwapInfoSellUSDDelegate;
        
        private System.Threading.SendOrPostCallback onSwapInfoSellUSDCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapInfoSellUSDXMLDelegate;
        
        private EndOperationDelegate onEndSwapInfoSellUSDXMLDelegate;
        
        private System.Threading.SendOrPostCallback onSwapInfoSellUSDXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginBiCurBaseXMLDelegate;
        
        private EndOperationDelegate onEndBiCurBaseXMLDelegate;
        
        private System.Threading.SendOrPostCallback onBiCurBaseXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginBiCurBaseDelegate;
        
        private EndOperationDelegate onEndBiCurBaseDelegate;
        
        private System.Threading.SendOrPostCallback onBiCurBaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginBiCurBacketXMLDelegate;
        
        private EndOperationDelegate onEndBiCurBacketXMLDelegate;
        
        private System.Threading.SendOrPostCallback onBiCurBacketXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginBiCurBacketDelegate;
        
        private EndOperationDelegate onEndBiCurBacketDelegate;
        
        private System.Threading.SendOrPostCallback onBiCurBacketCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapDynamicDelegate;
        
        private EndOperationDelegate onEndSwapDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onSwapDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapMonthTotalDelegate;
        
        private EndOperationDelegate onEndSwapMonthTotalDelegate;
        
        private System.Threading.SendOrPostCallback onSwapMonthTotalCompletedDelegate;
        
        private BeginOperationDelegate onBeginSwapMonthTotalXMLDelegate;
        
        private EndOperationDelegate onEndSwapMonthTotalXMLDelegate;
        
        private System.Threading.SendOrPostCallback onSwapMonthTotalXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginMKRDelegate;
        
        private EndOperationDelegate onEndMKRDelegate;
        
        private System.Threading.SendOrPostCallback onMKRCompletedDelegate;
        
        private BeginOperationDelegate onBeginMKRXMLDelegate;
        
        private EndOperationDelegate onEndMKRXMLDelegate;
        
        private System.Threading.SendOrPostCallback onMKRXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginDVDelegate;
        
        private EndOperationDelegate onEndDVDelegate;
        
        private System.Threading.SendOrPostCallback onDVCompletedDelegate;
        
        private BeginOperationDelegate onBeginDVXMLDelegate;
        
        private EndOperationDelegate onEndDVXMLDelegate;
        
        private System.Threading.SendOrPostCallback onDVXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginRepo_debtDelegate;
        
        private EndOperationDelegate onEndRepo_debtDelegate;
        
        private System.Threading.SendOrPostCallback onRepo_debtCompletedDelegate;
        
        private BeginOperationDelegate onBeginRepo_debtXMLDelegate;
        
        private EndOperationDelegate onEndRepo_debtXMLDelegate;
        
        private System.Threading.SendOrPostCallback onRepo_debtXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoins_baseDelegate;
        
        private EndOperationDelegate onEndCoins_baseDelegate;
        
        private System.Threading.SendOrPostCallback onCoins_baseCompletedDelegate;
        
        private BeginOperationDelegate onBeginCoins_baseXMLDelegate;
        
        private EndOperationDelegate onEndCoins_baseXMLDelegate;
        
        private System.Threading.SendOrPostCallback onCoins_baseXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginFixingBaseDelegate;
        
        private EndOperationDelegate onEndFixingBaseDelegate;
        
        private System.Threading.SendOrPostCallback onFixingBaseCompletedDelegate;
        
        private BeginOperationDelegate onBeginFixingBaseXMLDelegate;
        
        private EndOperationDelegate onEndFixingBaseXMLDelegate;
        
        private System.Threading.SendOrPostCallback onFixingBaseXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginOvernightDelegate;
        
        private EndOperationDelegate onEndOvernightDelegate;
        
        private System.Threading.SendOrPostCallback onOvernightCompletedDelegate;
        
        private BeginOperationDelegate onBeginOvernightXMLDelegate;
        
        private EndOperationDelegate onEndOvernightXMLDelegate;
        
        private System.Threading.SendOrPostCallback onOvernightXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginBauctionDelegate;
        
        private EndOperationDelegate onEndBauctionDelegate;
        
        private System.Threading.SendOrPostCallback onBauctionCompletedDelegate;
        
        private BeginOperationDelegate onBeginBauctionXMLDelegate;
        
        private EndOperationDelegate onEndBauctionXMLDelegate;
        
        private System.Threading.SendOrPostCallback onBauctionXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginDepoDynamicXMLDelegate;
        
        private EndOperationDelegate onEndDepoDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onDepoDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginDepoDynamicDelegate;
        
        private EndOperationDelegate onEndDepoDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onDepoDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginOstatDynamicXMLDelegate;
        
        private EndOperationDelegate onEndOstatDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onOstatDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginOstatDynamicDelegate;
        
        private EndOperationDelegate onEndOstatDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onOstatDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginDragMetDynamicXMLDelegate;
        
        private EndOperationDelegate onEndDragMetDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onDragMetDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginDragMetDynamicDelegate;
        
        private EndOperationDelegate onEndDragMetDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onDragMetDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestDateTimeDelegate;
        
        private EndOperationDelegate onEndGetLatestDateTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestDateTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestDateDelegate;
        
        private EndOperationDelegate onEndGetLatestDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestDateTimeSeldDelegate;
        
        private EndOperationDelegate onEndGetLatestDateTimeSeldDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestDateTimeSeldCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestDateSeldDelegate;
        
        private EndOperationDelegate onEndGetLatestDateSeldDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestDateSeldCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnumValutesXMLDelegate;
        
        private EndOperationDelegate onEndEnumValutesXMLDelegate;
        
        private System.Threading.SendOrPostCallback onEnumValutesXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnumValutesDelegate;
        
        private EndOperationDelegate onEndEnumValutesDelegate;
        
        private System.Threading.SendOrPostCallback onEnumValutesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCursDynamicXMLDelegate;
        
        private EndOperationDelegate onEndGetCursDynamicXMLDelegate;
        
        private System.Threading.SendOrPostCallback onGetCursDynamicXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCursDynamicDelegate;
        
        private EndOperationDelegate onEndGetCursDynamicDelegate;
        
        private System.Threading.SendOrPostCallback onGetCursDynamicCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCursOnDateXMLDelegate;
        
        private EndOperationDelegate onEndGetCursOnDateXMLDelegate;
        
        private System.Threading.SendOrPostCallback onGetCursOnDateXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeldCursOnDateXMLDelegate;
        
        private EndOperationDelegate onEndGetSeldCursOnDateXMLDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeldCursOnDateXMLCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSeldCursOnDateDelegate;
        
        private EndOperationDelegate onEndGetSeldCursOnDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeldCursOnDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCursOnDateDelegate;
        
        private EndOperationDelegate onEndGetCursOnDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetCursOnDateCompletedDelegate;
        
        public DailyInfoSoapClient() {
        }
        
        public DailyInfoSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DailyInfoSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DailyInfoSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DailyInfoSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<SaldoXMLCompletedEventArgs> SaldoXMLCompleted;
        
        public event System.EventHandler<ROISfixXMLCompletedEventArgs> ROISfixXMLCompleted;
        
        public event System.EventHandler<RuoniaXMLCompletedEventArgs> RuoniaXMLCompleted;
        
        public event System.EventHandler<OstatDepoXMLCompletedEventArgs> OstatDepoXMLCompleted;
        
        public event System.EventHandler<OstatDepoCompletedEventArgs> OstatDepoCompleted;
        
        public event System.EventHandler<ROISfixCompletedEventArgs> ROISfixCompleted;
        
        public event System.EventHandler<RuoniaCompletedEventArgs> RuoniaCompleted;
        
        public event System.EventHandler<mrrf7DCompletedEventArgs> mrrf7DCompleted;
        
        public event System.EventHandler<mrrf7DXMLCompletedEventArgs> mrrf7DXMLCompleted;
        
        public event System.EventHandler<mrrfCompletedEventArgs> mrrfCompleted;
        
        public event System.EventHandler<mrrfXMLCompletedEventArgs> mrrfXMLCompleted;
        
        public event System.EventHandler<SaldoCompletedEventArgs> SaldoCompleted;
        
        public event System.EventHandler<NewsInfoXMLCompletedEventArgs> NewsInfoXMLCompleted;
        
        public event System.EventHandler<OmodInfoXMLCompletedEventArgs> OmodInfoXMLCompleted;
        
        public event System.EventHandler<XVolCompletedEventArgs> XVolCompleted;
        
        public event System.EventHandler<XVolXMLCompletedEventArgs> XVolXMLCompleted;
        
        public event System.EventHandler<MainInfoXMLCompletedEventArgs> MainInfoXMLCompleted;
        
        public event System.EventHandler<AllDataInfoXMLCompletedEventArgs> AllDataInfoXMLCompleted;
        
        public event System.EventHandler<NewsInfoCompletedEventArgs> NewsInfoCompleted;
        
        public event System.EventHandler<SwapDynamicXMLCompletedEventArgs> SwapDynamicXMLCompleted;
        
        public event System.EventHandler<SwapInfoSellUSDVolXMLCompletedEventArgs> SwapInfoSellUSDVolXMLCompleted;
        
        public event System.EventHandler<SwapInfoSellUSDVolCompletedEventArgs> SwapInfoSellUSDVolCompleted;
        
        public event System.EventHandler<SwapInfoSellUSDCompletedEventArgs> SwapInfoSellUSDCompleted;
        
        public event System.EventHandler<SwapInfoSellUSDXMLCompletedEventArgs> SwapInfoSellUSDXMLCompleted;
        
        public event System.EventHandler<BiCurBaseXMLCompletedEventArgs> BiCurBaseXMLCompleted;
        
        public event System.EventHandler<BiCurBaseCompletedEventArgs> BiCurBaseCompleted;
        
        public event System.EventHandler<BiCurBacketXMLCompletedEventArgs> BiCurBacketXMLCompleted;
        
        public event System.EventHandler<BiCurBacketCompletedEventArgs> BiCurBacketCompleted;
        
        public event System.EventHandler<SwapDynamicCompletedEventArgs> SwapDynamicCompleted;
        
        public event System.EventHandler<SwapMonthTotalCompletedEventArgs> SwapMonthTotalCompleted;
        
        public event System.EventHandler<SwapMonthTotalXMLCompletedEventArgs> SwapMonthTotalXMLCompleted;
        
        public event System.EventHandler<MKRCompletedEventArgs> MKRCompleted;
        
        public event System.EventHandler<MKRXMLCompletedEventArgs> MKRXMLCompleted;
        
        public event System.EventHandler<DVCompletedEventArgs> DVCompleted;
        
        public event System.EventHandler<DVXMLCompletedEventArgs> DVXMLCompleted;
        
        public event System.EventHandler<Repo_debtCompletedEventArgs> Repo_debtCompleted;
        
        public event System.EventHandler<Repo_debtXMLCompletedEventArgs> Repo_debtXMLCompleted;
        
        public event System.EventHandler<Coins_baseCompletedEventArgs> Coins_baseCompleted;
        
        public event System.EventHandler<Coins_baseXMLCompletedEventArgs> Coins_baseXMLCompleted;
        
        public event System.EventHandler<FixingBaseCompletedEventArgs> FixingBaseCompleted;
        
        public event System.EventHandler<FixingBaseXMLCompletedEventArgs> FixingBaseXMLCompleted;
        
        public event System.EventHandler<OvernightCompletedEventArgs> OvernightCompleted;
        
        public event System.EventHandler<OvernightXMLCompletedEventArgs> OvernightXMLCompleted;
        
        public event System.EventHandler<BauctionCompletedEventArgs> BauctionCompleted;
        
        public event System.EventHandler<BauctionXMLCompletedEventArgs> BauctionXMLCompleted;
        
        public event System.EventHandler<DepoDynamicXMLCompletedEventArgs> DepoDynamicXMLCompleted;
        
        public event System.EventHandler<DepoDynamicCompletedEventArgs> DepoDynamicCompleted;
        
        public event System.EventHandler<OstatDynamicXMLCompletedEventArgs> OstatDynamicXMLCompleted;
        
        public event System.EventHandler<OstatDynamicCompletedEventArgs> OstatDynamicCompleted;
        
        public event System.EventHandler<DragMetDynamicXMLCompletedEventArgs> DragMetDynamicXMLCompleted;
        
        public event System.EventHandler<DragMetDynamicCompletedEventArgs> DragMetDynamicCompleted;
        
        public event System.EventHandler<GetLatestDateTimeCompletedEventArgs> GetLatestDateTimeCompleted;
        
        public event System.EventHandler<GetLatestDateCompletedEventArgs> GetLatestDateCompleted;
        
        public event System.EventHandler<GetLatestDateTimeSeldCompletedEventArgs> GetLatestDateTimeSeldCompleted;
        
        public event System.EventHandler<GetLatestDateSeldCompletedEventArgs> GetLatestDateSeldCompleted;
        
        public event System.EventHandler<EnumValutesXMLCompletedEventArgs> EnumValutesXMLCompleted;
        
        public event System.EventHandler<EnumValutesCompletedEventArgs> EnumValutesCompleted;
        
        public event System.EventHandler<GetCursDynamicXMLCompletedEventArgs> GetCursDynamicXMLCompleted;
        
        public event System.EventHandler<GetCursDynamicCompletedEventArgs> GetCursDynamicCompleted;
        
        public event System.EventHandler<GetCursOnDateXMLCompletedEventArgs> GetCursOnDateXMLCompleted;
        
        public event System.EventHandler<GetSeldCursOnDateXMLCompletedEventArgs> GetSeldCursOnDateXMLCompleted;
        
        public event System.EventHandler<GetSeldCursOnDateCompletedEventArgs> GetSeldCursOnDateCompleted;
        
        public event System.EventHandler<GetCursOnDateCompletedEventArgs> GetCursOnDateCompleted;
        
        public System.Xml.XmlNode SaldoXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SaldoXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaldoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaldoXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndSaldoXML(System.IAsyncResult result) {
            return base.Channel.EndSaldoXML(result);
        }
        
        private System.IAsyncResult OnBeginSaldoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSaldoXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSaldoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndSaldoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaldoXMLCompleted(object state) {
            if ((this.SaldoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaldoXMLCompleted(this, new SaldoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaldoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SaldoXMLAsync(fromDate, ToDate, null);
        }
        
        public void SaldoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSaldoXMLDelegate == null)) {
                this.onBeginSaldoXMLDelegate = new BeginOperationDelegate(this.OnBeginSaldoXML);
            }
            if ((this.onEndSaldoXMLDelegate == null)) {
                this.onEndSaldoXMLDelegate = new EndOperationDelegate(this.OnEndSaldoXML);
            }
            if ((this.onSaldoXMLCompletedDelegate == null)) {
                this.onSaldoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaldoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginSaldoXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSaldoXMLDelegate, this.onSaldoXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode ROISfixXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.ROISfixXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginROISfixXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginROISfixXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndROISfixXML(System.IAsyncResult result) {
            return base.Channel.EndROISfixXML(result);
        }
        
        private System.IAsyncResult OnBeginROISfixXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginROISfixXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndROISfixXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndROISfixXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnROISfixXMLCompleted(object state) {
            if ((this.ROISfixXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ROISfixXMLCompleted(this, new ROISfixXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ROISfixXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.ROISfixXMLAsync(fromDate, ToDate, null);
        }
        
        public void ROISfixXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginROISfixXMLDelegate == null)) {
                this.onBeginROISfixXMLDelegate = new BeginOperationDelegate(this.OnBeginROISfixXML);
            }
            if ((this.onEndROISfixXMLDelegate == null)) {
                this.onEndROISfixXMLDelegate = new EndOperationDelegate(this.OnEndROISfixXML);
            }
            if ((this.onROISfixXMLCompletedDelegate == null)) {
                this.onROISfixXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnROISfixXMLCompleted);
            }
            base.InvokeAsync(this.onBeginROISfixXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndROISfixXMLDelegate, this.onROISfixXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode RuoniaXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.RuoniaXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRuoniaXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRuoniaXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndRuoniaXML(System.IAsyncResult result) {
            return base.Channel.EndRuoniaXML(result);
        }
        
        private System.IAsyncResult OnBeginRuoniaXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginRuoniaXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndRuoniaXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndRuoniaXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRuoniaXMLCompleted(object state) {
            if ((this.RuoniaXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RuoniaXMLCompleted(this, new RuoniaXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RuoniaXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.RuoniaXMLAsync(fromDate, ToDate, null);
        }
        
        public void RuoniaXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginRuoniaXMLDelegate == null)) {
                this.onBeginRuoniaXMLDelegate = new BeginOperationDelegate(this.OnBeginRuoniaXML);
            }
            if ((this.onEndRuoniaXMLDelegate == null)) {
                this.onEndRuoniaXMLDelegate = new EndOperationDelegate(this.OnEndRuoniaXML);
            }
            if ((this.onRuoniaXMLCompletedDelegate == null)) {
                this.onRuoniaXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRuoniaXMLCompleted);
            }
            base.InvokeAsync(this.onBeginRuoniaXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndRuoniaXMLDelegate, this.onRuoniaXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode OstatDepoXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.OstatDepoXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOstatDepoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOstatDepoXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndOstatDepoXML(System.IAsyncResult result) {
            return base.Channel.EndOstatDepoXML(result);
        }
        
        private System.IAsyncResult OnBeginOstatDepoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginOstatDepoXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndOstatDepoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndOstatDepoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOstatDepoXMLCompleted(object state) {
            if ((this.OstatDepoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OstatDepoXMLCompleted(this, new OstatDepoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OstatDepoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDepoXMLAsync(fromDate, ToDate, null);
        }
        
        public void OstatDepoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginOstatDepoXMLDelegate == null)) {
                this.onBeginOstatDepoXMLDelegate = new BeginOperationDelegate(this.OnBeginOstatDepoXML);
            }
            if ((this.onEndOstatDepoXMLDelegate == null)) {
                this.onEndOstatDepoXMLDelegate = new EndOperationDelegate(this.OnEndOstatDepoXML);
            }
            if ((this.onOstatDepoXMLCompletedDelegate == null)) {
                this.onOstatDepoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOstatDepoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginOstatDepoXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndOstatDepoXMLDelegate, this.onOstatDepoXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet OstatDepo(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.OstatDepo(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOstatDepo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOstatDepo(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndOstatDepo(System.IAsyncResult result) {
            return base.Channel.EndOstatDepo(result);
        }
        
        private System.IAsyncResult OnBeginOstatDepo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginOstatDepo(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndOstatDepo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndOstatDepo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOstatDepoCompleted(object state) {
            if ((this.OstatDepoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OstatDepoCompleted(this, new OstatDepoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OstatDepoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDepoAsync(fromDate, ToDate, null);
        }
        
        public void OstatDepoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginOstatDepoDelegate == null)) {
                this.onBeginOstatDepoDelegate = new BeginOperationDelegate(this.OnBeginOstatDepo);
            }
            if ((this.onEndOstatDepoDelegate == null)) {
                this.onEndOstatDepoDelegate = new EndOperationDelegate(this.OnEndOstatDepo);
            }
            if ((this.onOstatDepoCompletedDelegate == null)) {
                this.onOstatDepoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOstatDepoCompleted);
            }
            base.InvokeAsync(this.onBeginOstatDepoDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndOstatDepoDelegate, this.onOstatDepoCompletedDelegate, userState);
        }
        
        public System.Data.DataSet ROISfix(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.ROISfix(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginROISfix(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginROISfix(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndROISfix(System.IAsyncResult result) {
            return base.Channel.EndROISfix(result);
        }
        
        private System.IAsyncResult OnBeginROISfix(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginROISfix(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndROISfix(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndROISfix(result);
            return new object[] {
                    retVal};
        }
        
        private void OnROISfixCompleted(object state) {
            if ((this.ROISfixCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ROISfixCompleted(this, new ROISfixCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ROISfixAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.ROISfixAsync(fromDate, ToDate, null);
        }
        
        public void ROISfixAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginROISfixDelegate == null)) {
                this.onBeginROISfixDelegate = new BeginOperationDelegate(this.OnBeginROISfix);
            }
            if ((this.onEndROISfixDelegate == null)) {
                this.onEndROISfixDelegate = new EndOperationDelegate(this.OnEndROISfix);
            }
            if ((this.onROISfixCompletedDelegate == null)) {
                this.onROISfixCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnROISfixCompleted);
            }
            base.InvokeAsync(this.onBeginROISfixDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndROISfixDelegate, this.onROISfixCompletedDelegate, userState);
        }
        
        public System.Data.DataSet Ruonia(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Ruonia(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRuonia(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRuonia(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndRuonia(System.IAsyncResult result) {
            return base.Channel.EndRuonia(result);
        }
        
        private System.IAsyncResult OnBeginRuonia(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginRuonia(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndRuonia(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndRuonia(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRuoniaCompleted(object state) {
            if ((this.RuoniaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RuoniaCompleted(this, new RuoniaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RuoniaAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.RuoniaAsync(fromDate, ToDate, null);
        }
        
        public void RuoniaAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginRuoniaDelegate == null)) {
                this.onBeginRuoniaDelegate = new BeginOperationDelegate(this.OnBeginRuonia);
            }
            if ((this.onEndRuoniaDelegate == null)) {
                this.onEndRuoniaDelegate = new EndOperationDelegate(this.OnEndRuonia);
            }
            if ((this.onRuoniaCompletedDelegate == null)) {
                this.onRuoniaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRuoniaCompleted);
            }
            base.InvokeAsync(this.onBeginRuoniaDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndRuoniaDelegate, this.onRuoniaCompletedDelegate, userState);
        }
        
        public System.Data.DataSet mrrf7D(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.mrrf7D(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginmrrf7D(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginmrrf7D(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet Endmrrf7D(System.IAsyncResult result) {
            return base.Channel.Endmrrf7D(result);
        }
        
        private System.IAsyncResult OnBeginmrrf7D(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.Beginmrrf7D(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndmrrf7D(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.Endmrrf7D(result);
            return new object[] {
                    retVal};
        }
        
        private void Onmrrf7DCompleted(object state) {
            if ((this.mrrf7DCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.mrrf7DCompleted(this, new mrrf7DCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void mrrf7DAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrf7DAsync(fromDate, ToDate, null);
        }
        
        public void mrrf7DAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginmrrf7DDelegate == null)) {
                this.onBeginmrrf7DDelegate = new BeginOperationDelegate(this.OnBeginmrrf7D);
            }
            if ((this.onEndmrrf7DDelegate == null)) {
                this.onEndmrrf7DDelegate = new EndOperationDelegate(this.OnEndmrrf7D);
            }
            if ((this.onmrrf7DCompletedDelegate == null)) {
                this.onmrrf7DCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onmrrf7DCompleted);
            }
            base.InvokeAsync(this.onBeginmrrf7DDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndmrrf7DDelegate, this.onmrrf7DCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode mrrf7DXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.mrrf7DXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginmrrf7DXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginmrrf7DXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode Endmrrf7DXML(System.IAsyncResult result) {
            return base.Channel.Endmrrf7DXML(result);
        }
        
        private System.IAsyncResult OnBeginmrrf7DXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.Beginmrrf7DXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndmrrf7DXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.Endmrrf7DXML(result);
            return new object[] {
                    retVal};
        }
        
        private void Onmrrf7DXMLCompleted(object state) {
            if ((this.mrrf7DXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.mrrf7DXMLCompleted(this, new mrrf7DXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void mrrf7DXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrf7DXMLAsync(fromDate, ToDate, null);
        }
        
        public void mrrf7DXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginmrrf7DXMLDelegate == null)) {
                this.onBeginmrrf7DXMLDelegate = new BeginOperationDelegate(this.OnBeginmrrf7DXML);
            }
            if ((this.onEndmrrf7DXMLDelegate == null)) {
                this.onEndmrrf7DXMLDelegate = new EndOperationDelegate(this.OnEndmrrf7DXML);
            }
            if ((this.onmrrf7DXMLCompletedDelegate == null)) {
                this.onmrrf7DXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.Onmrrf7DXMLCompleted);
            }
            base.InvokeAsync(this.onBeginmrrf7DXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndmrrf7DXMLDelegate, this.onmrrf7DXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet mrrf(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.mrrf(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult Beginmrrf(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.Beginmrrf(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet Endmrrf(System.IAsyncResult result) {
            return base.Channel.Endmrrf(result);
        }
        
        private System.IAsyncResult OnBeginmrrf(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.Beginmrrf(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndmrrf(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.Endmrrf(result);
            return new object[] {
                    retVal};
        }
        
        private void OnmrrfCompleted(object state) {
            if ((this.mrrfCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.mrrfCompleted(this, new mrrfCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void mrrfAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrfAsync(fromDate, ToDate, null);
        }
        
        public void mrrfAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginmrrfDelegate == null)) {
                this.onBeginmrrfDelegate = new BeginOperationDelegate(this.OnBeginmrrf);
            }
            if ((this.onEndmrrfDelegate == null)) {
                this.onEndmrrfDelegate = new EndOperationDelegate(this.OnEndmrrf);
            }
            if ((this.onmrrfCompletedDelegate == null)) {
                this.onmrrfCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnmrrfCompleted);
            }
            base.InvokeAsync(this.onBeginmrrfDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndmrrfDelegate, this.onmrrfCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode mrrfXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.mrrfXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginmrrfXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginmrrfXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndmrrfXML(System.IAsyncResult result) {
            return base.Channel.EndmrrfXML(result);
        }
        
        private System.IAsyncResult OnBeginmrrfXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginmrrfXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndmrrfXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndmrrfXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnmrrfXMLCompleted(object state) {
            if ((this.mrrfXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.mrrfXMLCompleted(this, new mrrfXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void mrrfXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.mrrfXMLAsync(fromDate, ToDate, null);
        }
        
        public void mrrfXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginmrrfXMLDelegate == null)) {
                this.onBeginmrrfXMLDelegate = new BeginOperationDelegate(this.OnBeginmrrfXML);
            }
            if ((this.onEndmrrfXMLDelegate == null)) {
                this.onEndmrrfXMLDelegate = new EndOperationDelegate(this.OnEndmrrfXML);
            }
            if ((this.onmrrfXMLCompletedDelegate == null)) {
                this.onmrrfXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnmrrfXMLCompleted);
            }
            base.InvokeAsync(this.onBeginmrrfXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndmrrfXMLDelegate, this.onmrrfXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet Saldo(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Saldo(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSaldo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaldo(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndSaldo(System.IAsyncResult result) {
            return base.Channel.EndSaldo(result);
        }
        
        private System.IAsyncResult OnBeginSaldo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSaldo(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSaldo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndSaldo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaldoCompleted(object state) {
            if ((this.SaldoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaldoCompleted(this, new SaldoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaldoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SaldoAsync(fromDate, ToDate, null);
        }
        
        public void SaldoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSaldoDelegate == null)) {
                this.onBeginSaldoDelegate = new BeginOperationDelegate(this.OnBeginSaldo);
            }
            if ((this.onEndSaldoDelegate == null)) {
                this.onEndSaldoDelegate = new EndOperationDelegate(this.OnEndSaldo);
            }
            if ((this.onSaldoCompletedDelegate == null)) {
                this.onSaldoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaldoCompleted);
            }
            base.InvokeAsync(this.onBeginSaldoDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSaldoDelegate, this.onSaldoCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode NewsInfoXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.NewsInfoXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNewsInfoXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsInfoXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndNewsInfoXML(System.IAsyncResult result) {
            return base.Channel.EndNewsInfoXML(result);
        }
        
        private System.IAsyncResult OnBeginNewsInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginNewsInfoXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndNewsInfoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndNewsInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewsInfoXMLCompleted(object state) {
            if ((this.NewsInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsInfoXMLCompleted(this, new NewsInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsInfoXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.NewsInfoXMLAsync(fromDate, ToDate, null);
        }
        
        public void NewsInfoXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginNewsInfoXMLDelegate == null)) {
                this.onBeginNewsInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginNewsInfoXML);
            }
            if ((this.onEndNewsInfoXMLDelegate == null)) {
                this.onEndNewsInfoXMLDelegate = new EndOperationDelegate(this.OnEndNewsInfoXML);
            }
            if ((this.onNewsInfoXMLCompletedDelegate == null)) {
                this.onNewsInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginNewsInfoXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndNewsInfoXMLDelegate, this.onNewsInfoXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode OmodInfoXML() {
            return base.Channel.OmodInfoXML();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOmodInfoXML(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOmodInfoXML(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndOmodInfoXML(System.IAsyncResult result) {
            return base.Channel.EndOmodInfoXML(result);
        }
        
        private System.IAsyncResult OnBeginOmodInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginOmodInfoXML(callback, asyncState);
        }
        
        private object[] OnEndOmodInfoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndOmodInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOmodInfoXMLCompleted(object state) {
            if ((this.OmodInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OmodInfoXMLCompleted(this, new OmodInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OmodInfoXMLAsync() {
            this.OmodInfoXMLAsync(null);
        }
        
        public void OmodInfoXMLAsync(object userState) {
            if ((this.onBeginOmodInfoXMLDelegate == null)) {
                this.onBeginOmodInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginOmodInfoXML);
            }
            if ((this.onEndOmodInfoXMLDelegate == null)) {
                this.onEndOmodInfoXMLDelegate = new EndOperationDelegate(this.OnEndOmodInfoXML);
            }
            if ((this.onOmodInfoXMLCompletedDelegate == null)) {
                this.onOmodInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOmodInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginOmodInfoXMLDelegate, null, this.onEndOmodInfoXMLDelegate, this.onOmodInfoXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet XVol(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.XVol(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginXVol(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginXVol(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndXVol(System.IAsyncResult result) {
            return base.Channel.EndXVol(result);
        }
        
        private System.IAsyncResult OnBeginXVol(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginXVol(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndXVol(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndXVol(result);
            return new object[] {
                    retVal};
        }
        
        private void OnXVolCompleted(object state) {
            if ((this.XVolCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.XVolCompleted(this, new XVolCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void XVolAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.XVolAsync(fromDate, ToDate, null);
        }
        
        public void XVolAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginXVolDelegate == null)) {
                this.onBeginXVolDelegate = new BeginOperationDelegate(this.OnBeginXVol);
            }
            if ((this.onEndXVolDelegate == null)) {
                this.onEndXVolDelegate = new EndOperationDelegate(this.OnEndXVol);
            }
            if ((this.onXVolCompletedDelegate == null)) {
                this.onXVolCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnXVolCompleted);
            }
            base.InvokeAsync(this.onBeginXVolDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndXVolDelegate, this.onXVolCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode XVolXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.XVolXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginXVolXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginXVolXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndXVolXML(System.IAsyncResult result) {
            return base.Channel.EndXVolXML(result);
        }
        
        private System.IAsyncResult OnBeginXVolXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginXVolXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndXVolXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndXVolXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnXVolXMLCompleted(object state) {
            if ((this.XVolXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.XVolXMLCompleted(this, new XVolXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void XVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.XVolXMLAsync(fromDate, ToDate, null);
        }
        
        public void XVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginXVolXMLDelegate == null)) {
                this.onBeginXVolXMLDelegate = new BeginOperationDelegate(this.OnBeginXVolXML);
            }
            if ((this.onEndXVolXMLDelegate == null)) {
                this.onEndXVolXMLDelegate = new EndOperationDelegate(this.OnEndXVolXML);
            }
            if ((this.onXVolXMLCompletedDelegate == null)) {
                this.onXVolXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnXVolXMLCompleted);
            }
            base.InvokeAsync(this.onBeginXVolXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndXVolXMLDelegate, this.onXVolXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode MainInfoXML() {
            return base.Channel.MainInfoXML();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMainInfoXML(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMainInfoXML(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndMainInfoXML(System.IAsyncResult result) {
            return base.Channel.EndMainInfoXML(result);
        }
        
        private System.IAsyncResult OnBeginMainInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginMainInfoXML(callback, asyncState);
        }
        
        private object[] OnEndMainInfoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndMainInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMainInfoXMLCompleted(object state) {
            if ((this.MainInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MainInfoXMLCompleted(this, new MainInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MainInfoXMLAsync() {
            this.MainInfoXMLAsync(null);
        }
        
        public void MainInfoXMLAsync(object userState) {
            if ((this.onBeginMainInfoXMLDelegate == null)) {
                this.onBeginMainInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginMainInfoXML);
            }
            if ((this.onEndMainInfoXMLDelegate == null)) {
                this.onEndMainInfoXMLDelegate = new EndOperationDelegate(this.OnEndMainInfoXML);
            }
            if ((this.onMainInfoXMLCompletedDelegate == null)) {
                this.onMainInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMainInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginMainInfoXMLDelegate, null, this.onEndMainInfoXMLDelegate, this.onMainInfoXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode AllDataInfoXML() {
            return base.Channel.AllDataInfoXML();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAllDataInfoXML(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAllDataInfoXML(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndAllDataInfoXML(System.IAsyncResult result) {
            return base.Channel.EndAllDataInfoXML(result);
        }
        
        private System.IAsyncResult OnBeginAllDataInfoXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAllDataInfoXML(callback, asyncState);
        }
        
        private object[] OnEndAllDataInfoXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndAllDataInfoXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAllDataInfoXMLCompleted(object state) {
            if ((this.AllDataInfoXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllDataInfoXMLCompleted(this, new AllDataInfoXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllDataInfoXMLAsync() {
            this.AllDataInfoXMLAsync(null);
        }
        
        public void AllDataInfoXMLAsync(object userState) {
            if ((this.onBeginAllDataInfoXMLDelegate == null)) {
                this.onBeginAllDataInfoXMLDelegate = new BeginOperationDelegate(this.OnBeginAllDataInfoXML);
            }
            if ((this.onEndAllDataInfoXMLDelegate == null)) {
                this.onEndAllDataInfoXMLDelegate = new EndOperationDelegate(this.OnEndAllDataInfoXML);
            }
            if ((this.onAllDataInfoXMLCompletedDelegate == null)) {
                this.onAllDataInfoXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllDataInfoXMLCompleted);
            }
            base.InvokeAsync(this.onBeginAllDataInfoXMLDelegate, null, this.onEndAllDataInfoXMLDelegate, this.onAllDataInfoXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet NewsInfo(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.NewsInfo(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNewsInfo(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewsInfo(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndNewsInfo(System.IAsyncResult result) {
            return base.Channel.EndNewsInfo(result);
        }
        
        private System.IAsyncResult OnBeginNewsInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginNewsInfo(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndNewsInfo(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndNewsInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewsInfoCompleted(object state) {
            if ((this.NewsInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewsInfoCompleted(this, new NewsInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewsInfoAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.NewsInfoAsync(fromDate, ToDate, null);
        }
        
        public void NewsInfoAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginNewsInfoDelegate == null)) {
                this.onBeginNewsInfoDelegate = new BeginOperationDelegate(this.OnBeginNewsInfo);
            }
            if ((this.onEndNewsInfoDelegate == null)) {
                this.onEndNewsInfoDelegate = new EndOperationDelegate(this.OnEndNewsInfo);
            }
            if ((this.onNewsInfoCompletedDelegate == null)) {
                this.onNewsInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewsInfoCompleted);
            }
            base.InvokeAsync(this.onBeginNewsInfoDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndNewsInfoDelegate, this.onNewsInfoCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode SwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapDynamicXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndSwapDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndSwapDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginSwapDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndSwapDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapDynamicXMLCompleted(object state) {
            if ((this.SwapDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapDynamicXMLCompleted(this, new SwapDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        public void SwapDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapDynamicXMLDelegate == null)) {
                this.onBeginSwapDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginSwapDynamicXML);
            }
            if ((this.onEndSwapDynamicXMLDelegate == null)) {
                this.onEndSwapDynamicXMLDelegate = new EndOperationDelegate(this.OnEndSwapDynamicXML);
            }
            if ((this.onSwapDynamicXMLCompletedDelegate == null)) {
                this.onSwapDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginSwapDynamicXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapDynamicXMLDelegate, this.onSwapDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode SwapInfoSellUSDVolXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapInfoSellUSDVolXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapInfoSellUSDVolXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapInfoSellUSDVolXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndSwapInfoSellUSDVolXML(System.IAsyncResult result) {
            return base.Channel.EndSwapInfoSellUSDVolXML(result);
        }
        
        private System.IAsyncResult OnBeginSwapInfoSellUSDVolXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapInfoSellUSDVolXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapInfoSellUSDVolXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndSwapInfoSellUSDVolXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapInfoSellUSDVolXMLCompleted(object state) {
            if ((this.SwapInfoSellUSDVolXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapInfoSellUSDVolXMLCompleted(this, new SwapInfoSellUSDVolXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapInfoSellUSDVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapInfoSellUSDVolXMLAsync(fromDate, ToDate, null);
        }
        
        public void SwapInfoSellUSDVolXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapInfoSellUSDVolXMLDelegate == null)) {
                this.onBeginSwapInfoSellUSDVolXMLDelegate = new BeginOperationDelegate(this.OnBeginSwapInfoSellUSDVolXML);
            }
            if ((this.onEndSwapInfoSellUSDVolXMLDelegate == null)) {
                this.onEndSwapInfoSellUSDVolXMLDelegate = new EndOperationDelegate(this.OnEndSwapInfoSellUSDVolXML);
            }
            if ((this.onSwapInfoSellUSDVolXMLCompletedDelegate == null)) {
                this.onSwapInfoSellUSDVolXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapInfoSellUSDVolXMLCompleted);
            }
            base.InvokeAsync(this.onBeginSwapInfoSellUSDVolXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapInfoSellUSDVolXMLDelegate, this.onSwapInfoSellUSDVolXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet SwapInfoSellUSDVol(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapInfoSellUSDVol(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapInfoSellUSDVol(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapInfoSellUSDVol(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndSwapInfoSellUSDVol(System.IAsyncResult result) {
            return base.Channel.EndSwapInfoSellUSDVol(result);
        }
        
        private System.IAsyncResult OnBeginSwapInfoSellUSDVol(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapInfoSellUSDVol(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapInfoSellUSDVol(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndSwapInfoSellUSDVol(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapInfoSellUSDVolCompleted(object state) {
            if ((this.SwapInfoSellUSDVolCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapInfoSellUSDVolCompleted(this, new SwapInfoSellUSDVolCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapInfoSellUSDVolAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapInfoSellUSDVolAsync(fromDate, ToDate, null);
        }
        
        public void SwapInfoSellUSDVolAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapInfoSellUSDVolDelegate == null)) {
                this.onBeginSwapInfoSellUSDVolDelegate = new BeginOperationDelegate(this.OnBeginSwapInfoSellUSDVol);
            }
            if ((this.onEndSwapInfoSellUSDVolDelegate == null)) {
                this.onEndSwapInfoSellUSDVolDelegate = new EndOperationDelegate(this.OnEndSwapInfoSellUSDVol);
            }
            if ((this.onSwapInfoSellUSDVolCompletedDelegate == null)) {
                this.onSwapInfoSellUSDVolCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapInfoSellUSDVolCompleted);
            }
            base.InvokeAsync(this.onBeginSwapInfoSellUSDVolDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapInfoSellUSDVolDelegate, this.onSwapInfoSellUSDVolCompletedDelegate, userState);
        }
        
        public System.Data.DataSet SwapInfoSellUSD(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapInfoSellUSD(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapInfoSellUSD(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapInfoSellUSD(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndSwapInfoSellUSD(System.IAsyncResult result) {
            return base.Channel.EndSwapInfoSellUSD(result);
        }
        
        private System.IAsyncResult OnBeginSwapInfoSellUSD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapInfoSellUSD(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapInfoSellUSD(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndSwapInfoSellUSD(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapInfoSellUSDCompleted(object state) {
            if ((this.SwapInfoSellUSDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapInfoSellUSDCompleted(this, new SwapInfoSellUSDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapInfoSellUSDAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapInfoSellUSDAsync(fromDate, ToDate, null);
        }
        
        public void SwapInfoSellUSDAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapInfoSellUSDDelegate == null)) {
                this.onBeginSwapInfoSellUSDDelegate = new BeginOperationDelegate(this.OnBeginSwapInfoSellUSD);
            }
            if ((this.onEndSwapInfoSellUSDDelegate == null)) {
                this.onEndSwapInfoSellUSDDelegate = new EndOperationDelegate(this.OnEndSwapInfoSellUSD);
            }
            if ((this.onSwapInfoSellUSDCompletedDelegate == null)) {
                this.onSwapInfoSellUSDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapInfoSellUSDCompleted);
            }
            base.InvokeAsync(this.onBeginSwapInfoSellUSDDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapInfoSellUSDDelegate, this.onSwapInfoSellUSDCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode SwapInfoSellUSDXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapInfoSellUSDXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapInfoSellUSDXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapInfoSellUSDXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndSwapInfoSellUSDXML(System.IAsyncResult result) {
            return base.Channel.EndSwapInfoSellUSDXML(result);
        }
        
        private System.IAsyncResult OnBeginSwapInfoSellUSDXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapInfoSellUSDXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapInfoSellUSDXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndSwapInfoSellUSDXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapInfoSellUSDXMLCompleted(object state) {
            if ((this.SwapInfoSellUSDXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapInfoSellUSDXMLCompleted(this, new SwapInfoSellUSDXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapInfoSellUSDXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapInfoSellUSDXMLAsync(fromDate, ToDate, null);
        }
        
        public void SwapInfoSellUSDXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapInfoSellUSDXMLDelegate == null)) {
                this.onBeginSwapInfoSellUSDXMLDelegate = new BeginOperationDelegate(this.OnBeginSwapInfoSellUSDXML);
            }
            if ((this.onEndSwapInfoSellUSDXMLDelegate == null)) {
                this.onEndSwapInfoSellUSDXMLDelegate = new EndOperationDelegate(this.OnEndSwapInfoSellUSDXML);
            }
            if ((this.onSwapInfoSellUSDXMLCompletedDelegate == null)) {
                this.onSwapInfoSellUSDXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapInfoSellUSDXMLCompleted);
            }
            base.InvokeAsync(this.onBeginSwapInfoSellUSDXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapInfoSellUSDXMLDelegate, this.onSwapInfoSellUSDXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode BiCurBaseXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.BiCurBaseXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBiCurBaseXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBiCurBaseXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndBiCurBaseXML(System.IAsyncResult result) {
            return base.Channel.EndBiCurBaseXML(result);
        }
        
        private System.IAsyncResult OnBeginBiCurBaseXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginBiCurBaseXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndBiCurBaseXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndBiCurBaseXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBiCurBaseXMLCompleted(object state) {
            if ((this.BiCurBaseXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BiCurBaseXMLCompleted(this, new BiCurBaseXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BiCurBaseXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.BiCurBaseXMLAsync(fromDate, ToDate, null);
        }
        
        public void BiCurBaseXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginBiCurBaseXMLDelegate == null)) {
                this.onBeginBiCurBaseXMLDelegate = new BeginOperationDelegate(this.OnBeginBiCurBaseXML);
            }
            if ((this.onEndBiCurBaseXMLDelegate == null)) {
                this.onEndBiCurBaseXMLDelegate = new EndOperationDelegate(this.OnEndBiCurBaseXML);
            }
            if ((this.onBiCurBaseXMLCompletedDelegate == null)) {
                this.onBiCurBaseXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBiCurBaseXMLCompleted);
            }
            base.InvokeAsync(this.onBeginBiCurBaseXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndBiCurBaseXMLDelegate, this.onBiCurBaseXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet BiCurBase(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.BiCurBase(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBiCurBase(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBiCurBase(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndBiCurBase(System.IAsyncResult result) {
            return base.Channel.EndBiCurBase(result);
        }
        
        private System.IAsyncResult OnBeginBiCurBase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginBiCurBase(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndBiCurBase(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndBiCurBase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBiCurBaseCompleted(object state) {
            if ((this.BiCurBaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BiCurBaseCompleted(this, new BiCurBaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BiCurBaseAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.BiCurBaseAsync(fromDate, ToDate, null);
        }
        
        public void BiCurBaseAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginBiCurBaseDelegate == null)) {
                this.onBeginBiCurBaseDelegate = new BeginOperationDelegate(this.OnBeginBiCurBase);
            }
            if ((this.onEndBiCurBaseDelegate == null)) {
                this.onEndBiCurBaseDelegate = new EndOperationDelegate(this.OnEndBiCurBase);
            }
            if ((this.onBiCurBaseCompletedDelegate == null)) {
                this.onBiCurBaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBiCurBaseCompleted);
            }
            base.InvokeAsync(this.onBeginBiCurBaseDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndBiCurBaseDelegate, this.onBiCurBaseCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode BiCurBacketXML() {
            return base.Channel.BiCurBacketXML();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBiCurBacketXML(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBiCurBacketXML(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndBiCurBacketXML(System.IAsyncResult result) {
            return base.Channel.EndBiCurBacketXML(result);
        }
        
        private System.IAsyncResult OnBeginBiCurBacketXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginBiCurBacketXML(callback, asyncState);
        }
        
        private object[] OnEndBiCurBacketXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndBiCurBacketXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBiCurBacketXMLCompleted(object state) {
            if ((this.BiCurBacketXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BiCurBacketXMLCompleted(this, new BiCurBacketXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BiCurBacketXMLAsync() {
            this.BiCurBacketXMLAsync(null);
        }
        
        public void BiCurBacketXMLAsync(object userState) {
            if ((this.onBeginBiCurBacketXMLDelegate == null)) {
                this.onBeginBiCurBacketXMLDelegate = new BeginOperationDelegate(this.OnBeginBiCurBacketXML);
            }
            if ((this.onEndBiCurBacketXMLDelegate == null)) {
                this.onEndBiCurBacketXMLDelegate = new EndOperationDelegate(this.OnEndBiCurBacketXML);
            }
            if ((this.onBiCurBacketXMLCompletedDelegate == null)) {
                this.onBiCurBacketXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBiCurBacketXMLCompleted);
            }
            base.InvokeAsync(this.onBeginBiCurBacketXMLDelegate, null, this.onEndBiCurBacketXMLDelegate, this.onBiCurBacketXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet BiCurBacket() {
            return base.Channel.BiCurBacket();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBiCurBacket(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBiCurBacket(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndBiCurBacket(System.IAsyncResult result) {
            return base.Channel.EndBiCurBacket(result);
        }
        
        private System.IAsyncResult OnBeginBiCurBacket(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginBiCurBacket(callback, asyncState);
        }
        
        private object[] OnEndBiCurBacket(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndBiCurBacket(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBiCurBacketCompleted(object state) {
            if ((this.BiCurBacketCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BiCurBacketCompleted(this, new BiCurBacketCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BiCurBacketAsync() {
            this.BiCurBacketAsync(null);
        }
        
        public void BiCurBacketAsync(object userState) {
            if ((this.onBeginBiCurBacketDelegate == null)) {
                this.onBeginBiCurBacketDelegate = new BeginOperationDelegate(this.OnBeginBiCurBacket);
            }
            if ((this.onEndBiCurBacketDelegate == null)) {
                this.onEndBiCurBacketDelegate = new EndOperationDelegate(this.OnEndBiCurBacket);
            }
            if ((this.onBiCurBacketCompletedDelegate == null)) {
                this.onBiCurBacketCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBiCurBacketCompleted);
            }
            base.InvokeAsync(this.onBeginBiCurBacketDelegate, null, this.onEndBiCurBacketDelegate, this.onBiCurBacketCompletedDelegate, userState);
        }
        
        public System.Data.DataSet SwapDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapDynamic(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndSwapDynamic(System.IAsyncResult result) {
            return base.Channel.EndSwapDynamic(result);
        }
        
        private System.IAsyncResult OnBeginSwapDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndSwapDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapDynamicCompleted(object state) {
            if ((this.SwapDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapDynamicCompleted(this, new SwapDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapDynamicAsync(fromDate, ToDate, null);
        }
        
        public void SwapDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapDynamicDelegate == null)) {
                this.onBeginSwapDynamicDelegate = new BeginOperationDelegate(this.OnBeginSwapDynamic);
            }
            if ((this.onEndSwapDynamicDelegate == null)) {
                this.onEndSwapDynamicDelegate = new EndOperationDelegate(this.OnEndSwapDynamic);
            }
            if ((this.onSwapDynamicCompletedDelegate == null)) {
                this.onSwapDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginSwapDynamicDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapDynamicDelegate, this.onSwapDynamicCompletedDelegate, userState);
        }
        
        public System.Data.DataSet SwapMonthTotal(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapMonthTotal(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapMonthTotal(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapMonthTotal(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndSwapMonthTotal(System.IAsyncResult result) {
            return base.Channel.EndSwapMonthTotal(result);
        }
        
        private System.IAsyncResult OnBeginSwapMonthTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapMonthTotal(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapMonthTotal(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndSwapMonthTotal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapMonthTotalCompleted(object state) {
            if ((this.SwapMonthTotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapMonthTotalCompleted(this, new SwapMonthTotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapMonthTotalAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapMonthTotalAsync(fromDate, ToDate, null);
        }
        
        public void SwapMonthTotalAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapMonthTotalDelegate == null)) {
                this.onBeginSwapMonthTotalDelegate = new BeginOperationDelegate(this.OnBeginSwapMonthTotal);
            }
            if ((this.onEndSwapMonthTotalDelegate == null)) {
                this.onEndSwapMonthTotalDelegate = new EndOperationDelegate(this.OnEndSwapMonthTotal);
            }
            if ((this.onSwapMonthTotalCompletedDelegate == null)) {
                this.onSwapMonthTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapMonthTotalCompleted);
            }
            base.InvokeAsync(this.onBeginSwapMonthTotalDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapMonthTotalDelegate, this.onSwapMonthTotalCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode SwapMonthTotalXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.SwapMonthTotalXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSwapMonthTotalXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSwapMonthTotalXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndSwapMonthTotalXML(System.IAsyncResult result) {
            return base.Channel.EndSwapMonthTotalXML(result);
        }
        
        private System.IAsyncResult OnBeginSwapMonthTotalXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginSwapMonthTotalXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndSwapMonthTotalXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndSwapMonthTotalXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSwapMonthTotalXMLCompleted(object state) {
            if ((this.SwapMonthTotalXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SwapMonthTotalXMLCompleted(this, new SwapMonthTotalXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SwapMonthTotalXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.SwapMonthTotalXMLAsync(fromDate, ToDate, null);
        }
        
        public void SwapMonthTotalXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginSwapMonthTotalXMLDelegate == null)) {
                this.onBeginSwapMonthTotalXMLDelegate = new BeginOperationDelegate(this.OnBeginSwapMonthTotalXML);
            }
            if ((this.onEndSwapMonthTotalXMLDelegate == null)) {
                this.onEndSwapMonthTotalXMLDelegate = new EndOperationDelegate(this.OnEndSwapMonthTotalXML);
            }
            if ((this.onSwapMonthTotalXMLCompletedDelegate == null)) {
                this.onSwapMonthTotalXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSwapMonthTotalXMLCompleted);
            }
            base.InvokeAsync(this.onBeginSwapMonthTotalXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndSwapMonthTotalXMLDelegate, this.onSwapMonthTotalXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet MKR(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.MKR(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMKR(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMKR(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndMKR(System.IAsyncResult result) {
            return base.Channel.EndMKR(result);
        }
        
        private System.IAsyncResult OnBeginMKR(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginMKR(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndMKR(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndMKR(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMKRCompleted(object state) {
            if ((this.MKRCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MKRCompleted(this, new MKRCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MKRAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.MKRAsync(fromDate, ToDate, null);
        }
        
        public void MKRAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginMKRDelegate == null)) {
                this.onBeginMKRDelegate = new BeginOperationDelegate(this.OnBeginMKR);
            }
            if ((this.onEndMKRDelegate == null)) {
                this.onEndMKRDelegate = new EndOperationDelegate(this.OnEndMKR);
            }
            if ((this.onMKRCompletedDelegate == null)) {
                this.onMKRCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMKRCompleted);
            }
            base.InvokeAsync(this.onBeginMKRDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndMKRDelegate, this.onMKRCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode MKRXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.MKRXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMKRXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMKRXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndMKRXML(System.IAsyncResult result) {
            return base.Channel.EndMKRXML(result);
        }
        
        private System.IAsyncResult OnBeginMKRXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginMKRXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndMKRXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndMKRXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMKRXMLCompleted(object state) {
            if ((this.MKRXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MKRXMLCompleted(this, new MKRXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MKRXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.MKRXMLAsync(fromDate, ToDate, null);
        }
        
        public void MKRXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginMKRXMLDelegate == null)) {
                this.onBeginMKRXMLDelegate = new BeginOperationDelegate(this.OnBeginMKRXML);
            }
            if ((this.onEndMKRXMLDelegate == null)) {
                this.onEndMKRXMLDelegate = new EndOperationDelegate(this.OnEndMKRXML);
            }
            if ((this.onMKRXMLCompletedDelegate == null)) {
                this.onMKRXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMKRXMLCompleted);
            }
            base.InvokeAsync(this.onBeginMKRXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndMKRXMLDelegate, this.onMKRXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet DV(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DV(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDV(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDV(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndDV(System.IAsyncResult result) {
            return base.Channel.EndDV(result);
        }
        
        private System.IAsyncResult OnBeginDV(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDV(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDV(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndDV(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDVCompleted(object state) {
            if ((this.DVCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DVCompleted(this, new DVCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DVAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DVAsync(fromDate, ToDate, null);
        }
        
        public void DVAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDVDelegate == null)) {
                this.onBeginDVDelegate = new BeginOperationDelegate(this.OnBeginDV);
            }
            if ((this.onEndDVDelegate == null)) {
                this.onEndDVDelegate = new EndOperationDelegate(this.OnEndDV);
            }
            if ((this.onDVCompletedDelegate == null)) {
                this.onDVCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDVCompleted);
            }
            base.InvokeAsync(this.onBeginDVDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDVDelegate, this.onDVCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode DVXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DVXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDVXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDVXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndDVXML(System.IAsyncResult result) {
            return base.Channel.EndDVXML(result);
        }
        
        private System.IAsyncResult OnBeginDVXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDVXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDVXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndDVXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDVXMLCompleted(object state) {
            if ((this.DVXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DVXMLCompleted(this, new DVXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DVXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DVXMLAsync(fromDate, ToDate, null);
        }
        
        public void DVXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDVXMLDelegate == null)) {
                this.onBeginDVXMLDelegate = new BeginOperationDelegate(this.OnBeginDVXML);
            }
            if ((this.onEndDVXMLDelegate == null)) {
                this.onEndDVXMLDelegate = new EndOperationDelegate(this.OnEndDVXML);
            }
            if ((this.onDVXMLCompletedDelegate == null)) {
                this.onDVXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDVXMLCompleted);
            }
            base.InvokeAsync(this.onBeginDVXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDVXMLDelegate, this.onDVXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet Repo_debt(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Repo_debt(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRepo_debt(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRepo_debt(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndRepo_debt(System.IAsyncResult result) {
            return base.Channel.EndRepo_debt(result);
        }
        
        private System.IAsyncResult OnBeginRepo_debt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginRepo_debt(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndRepo_debt(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndRepo_debt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRepo_debtCompleted(object state) {
            if ((this.Repo_debtCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Repo_debtCompleted(this, new Repo_debtCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Repo_debtAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.Repo_debtAsync(fromDate, ToDate, null);
        }
        
        public void Repo_debtAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginRepo_debtDelegate == null)) {
                this.onBeginRepo_debtDelegate = new BeginOperationDelegate(this.OnBeginRepo_debt);
            }
            if ((this.onEndRepo_debtDelegate == null)) {
                this.onEndRepo_debtDelegate = new EndOperationDelegate(this.OnEndRepo_debt);
            }
            if ((this.onRepo_debtCompletedDelegate == null)) {
                this.onRepo_debtCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRepo_debtCompleted);
            }
            base.InvokeAsync(this.onBeginRepo_debtDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndRepo_debtDelegate, this.onRepo_debtCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode Repo_debtXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Repo_debtXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRepo_debtXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRepo_debtXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndRepo_debtXML(System.IAsyncResult result) {
            return base.Channel.EndRepo_debtXML(result);
        }
        
        private System.IAsyncResult OnBeginRepo_debtXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginRepo_debtXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndRepo_debtXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndRepo_debtXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRepo_debtXMLCompleted(object state) {
            if ((this.Repo_debtXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Repo_debtXMLCompleted(this, new Repo_debtXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Repo_debtXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.Repo_debtXMLAsync(fromDate, ToDate, null);
        }
        
        public void Repo_debtXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginRepo_debtXMLDelegate == null)) {
                this.onBeginRepo_debtXMLDelegate = new BeginOperationDelegate(this.OnBeginRepo_debtXML);
            }
            if ((this.onEndRepo_debtXMLDelegate == null)) {
                this.onEndRepo_debtXMLDelegate = new EndOperationDelegate(this.OnEndRepo_debtXML);
            }
            if ((this.onRepo_debtXMLCompletedDelegate == null)) {
                this.onRepo_debtXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRepo_debtXMLCompleted);
            }
            base.InvokeAsync(this.onBeginRepo_debtXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndRepo_debtXMLDelegate, this.onRepo_debtXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet Coins_base(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Coins_base(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCoins_base(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoins_base(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndCoins_base(System.IAsyncResult result) {
            return base.Channel.EndCoins_base(result);
        }
        
        private System.IAsyncResult OnBeginCoins_base(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginCoins_base(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndCoins_base(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndCoins_base(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoins_baseCompleted(object state) {
            if ((this.Coins_baseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Coins_baseCompleted(this, new Coins_baseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Coins_baseAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.Coins_baseAsync(fromDate, ToDate, null);
        }
        
        public void Coins_baseAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginCoins_baseDelegate == null)) {
                this.onBeginCoins_baseDelegate = new BeginOperationDelegate(this.OnBeginCoins_base);
            }
            if ((this.onEndCoins_baseDelegate == null)) {
                this.onEndCoins_baseDelegate = new EndOperationDelegate(this.OnEndCoins_base);
            }
            if ((this.onCoins_baseCompletedDelegate == null)) {
                this.onCoins_baseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoins_baseCompleted);
            }
            base.InvokeAsync(this.onBeginCoins_baseDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndCoins_baseDelegate, this.onCoins_baseCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode Coins_baseXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Coins_baseXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCoins_baseXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCoins_baseXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndCoins_baseXML(System.IAsyncResult result) {
            return base.Channel.EndCoins_baseXML(result);
        }
        
        private System.IAsyncResult OnBeginCoins_baseXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginCoins_baseXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndCoins_baseXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndCoins_baseXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCoins_baseXMLCompleted(object state) {
            if ((this.Coins_baseXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Coins_baseXMLCompleted(this, new Coins_baseXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Coins_baseXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.Coins_baseXMLAsync(fromDate, ToDate, null);
        }
        
        public void Coins_baseXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginCoins_baseXMLDelegate == null)) {
                this.onBeginCoins_baseXMLDelegate = new BeginOperationDelegate(this.OnBeginCoins_baseXML);
            }
            if ((this.onEndCoins_baseXMLDelegate == null)) {
                this.onEndCoins_baseXMLDelegate = new EndOperationDelegate(this.OnEndCoins_baseXML);
            }
            if ((this.onCoins_baseXMLCompletedDelegate == null)) {
                this.onCoins_baseXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCoins_baseXMLCompleted);
            }
            base.InvokeAsync(this.onBeginCoins_baseXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndCoins_baseXMLDelegate, this.onCoins_baseXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet FixingBase(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.FixingBase(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFixingBase(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFixingBase(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndFixingBase(System.IAsyncResult result) {
            return base.Channel.EndFixingBase(result);
        }
        
        private System.IAsyncResult OnBeginFixingBase(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginFixingBase(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndFixingBase(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndFixingBase(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFixingBaseCompleted(object state) {
            if ((this.FixingBaseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FixingBaseCompleted(this, new FixingBaseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FixingBaseAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.FixingBaseAsync(fromDate, ToDate, null);
        }
        
        public void FixingBaseAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginFixingBaseDelegate == null)) {
                this.onBeginFixingBaseDelegate = new BeginOperationDelegate(this.OnBeginFixingBase);
            }
            if ((this.onEndFixingBaseDelegate == null)) {
                this.onEndFixingBaseDelegate = new EndOperationDelegate(this.OnEndFixingBase);
            }
            if ((this.onFixingBaseCompletedDelegate == null)) {
                this.onFixingBaseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFixingBaseCompleted);
            }
            base.InvokeAsync(this.onBeginFixingBaseDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndFixingBaseDelegate, this.onFixingBaseCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode FixingBaseXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.FixingBaseXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFixingBaseXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFixingBaseXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndFixingBaseXML(System.IAsyncResult result) {
            return base.Channel.EndFixingBaseXML(result);
        }
        
        private System.IAsyncResult OnBeginFixingBaseXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginFixingBaseXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndFixingBaseXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndFixingBaseXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFixingBaseXMLCompleted(object state) {
            if ((this.FixingBaseXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FixingBaseXMLCompleted(this, new FixingBaseXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FixingBaseXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.FixingBaseXMLAsync(fromDate, ToDate, null);
        }
        
        public void FixingBaseXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginFixingBaseXMLDelegate == null)) {
                this.onBeginFixingBaseXMLDelegate = new BeginOperationDelegate(this.OnBeginFixingBaseXML);
            }
            if ((this.onEndFixingBaseXMLDelegate == null)) {
                this.onEndFixingBaseXMLDelegate = new EndOperationDelegate(this.OnEndFixingBaseXML);
            }
            if ((this.onFixingBaseXMLCompletedDelegate == null)) {
                this.onFixingBaseXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFixingBaseXMLCompleted);
            }
            base.InvokeAsync(this.onBeginFixingBaseXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndFixingBaseXMLDelegate, this.onFixingBaseXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet Overnight(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Overnight(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOvernight(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOvernight(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndOvernight(System.IAsyncResult result) {
            return base.Channel.EndOvernight(result);
        }
        
        private System.IAsyncResult OnBeginOvernight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginOvernight(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndOvernight(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndOvernight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOvernightCompleted(object state) {
            if ((this.OvernightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OvernightCompleted(this, new OvernightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OvernightAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OvernightAsync(fromDate, ToDate, null);
        }
        
        public void OvernightAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginOvernightDelegate == null)) {
                this.onBeginOvernightDelegate = new BeginOperationDelegate(this.OnBeginOvernight);
            }
            if ((this.onEndOvernightDelegate == null)) {
                this.onEndOvernightDelegate = new EndOperationDelegate(this.OnEndOvernight);
            }
            if ((this.onOvernightCompletedDelegate == null)) {
                this.onOvernightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOvernightCompleted);
            }
            base.InvokeAsync(this.onBeginOvernightDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndOvernightDelegate, this.onOvernightCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode OvernightXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.OvernightXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOvernightXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOvernightXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndOvernightXML(System.IAsyncResult result) {
            return base.Channel.EndOvernightXML(result);
        }
        
        private System.IAsyncResult OnBeginOvernightXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginOvernightXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndOvernightXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndOvernightXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOvernightXMLCompleted(object state) {
            if ((this.OvernightXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OvernightXMLCompleted(this, new OvernightXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OvernightXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OvernightXMLAsync(fromDate, ToDate, null);
        }
        
        public void OvernightXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginOvernightXMLDelegate == null)) {
                this.onBeginOvernightXMLDelegate = new BeginOperationDelegate(this.OnBeginOvernightXML);
            }
            if ((this.onEndOvernightXMLDelegate == null)) {
                this.onEndOvernightXMLDelegate = new EndOperationDelegate(this.OnEndOvernightXML);
            }
            if ((this.onOvernightXMLCompletedDelegate == null)) {
                this.onOvernightXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOvernightXMLCompleted);
            }
            base.InvokeAsync(this.onBeginOvernightXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndOvernightXMLDelegate, this.onOvernightXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet Bauction(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.Bauction(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBauction(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBauction(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndBauction(System.IAsyncResult result) {
            return base.Channel.EndBauction(result);
        }
        
        private System.IAsyncResult OnBeginBauction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginBauction(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndBauction(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndBauction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBauctionCompleted(object state) {
            if ((this.BauctionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BauctionCompleted(this, new BauctionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BauctionAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.BauctionAsync(fromDate, ToDate, null);
        }
        
        public void BauctionAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginBauctionDelegate == null)) {
                this.onBeginBauctionDelegate = new BeginOperationDelegate(this.OnBeginBauction);
            }
            if ((this.onEndBauctionDelegate == null)) {
                this.onEndBauctionDelegate = new EndOperationDelegate(this.OnEndBauction);
            }
            if ((this.onBauctionCompletedDelegate == null)) {
                this.onBauctionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBauctionCompleted);
            }
            base.InvokeAsync(this.onBeginBauctionDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndBauctionDelegate, this.onBauctionCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode BauctionXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.BauctionXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBauctionXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBauctionXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndBauctionXML(System.IAsyncResult result) {
            return base.Channel.EndBauctionXML(result);
        }
        
        private System.IAsyncResult OnBeginBauctionXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginBauctionXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndBauctionXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndBauctionXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBauctionXMLCompleted(object state) {
            if ((this.BauctionXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BauctionXMLCompleted(this, new BauctionXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BauctionXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.BauctionXMLAsync(fromDate, ToDate, null);
        }
        
        public void BauctionXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginBauctionXMLDelegate == null)) {
                this.onBeginBauctionXMLDelegate = new BeginOperationDelegate(this.OnBeginBauctionXML);
            }
            if ((this.onEndBauctionXMLDelegate == null)) {
                this.onEndBauctionXMLDelegate = new EndOperationDelegate(this.OnEndBauctionXML);
            }
            if ((this.onBauctionXMLCompletedDelegate == null)) {
                this.onBauctionXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBauctionXMLCompleted);
            }
            base.InvokeAsync(this.onBeginBauctionXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndBauctionXMLDelegate, this.onBauctionXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode DepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DepoDynamicXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDepoDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDepoDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndDepoDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndDepoDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginDepoDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDepoDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDepoDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndDepoDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDepoDynamicXMLCompleted(object state) {
            if ((this.DepoDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DepoDynamicXMLCompleted(this, new DepoDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DepoDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DepoDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        public void DepoDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDepoDynamicXMLDelegate == null)) {
                this.onBeginDepoDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginDepoDynamicXML);
            }
            if ((this.onEndDepoDynamicXMLDelegate == null)) {
                this.onEndDepoDynamicXMLDelegate = new EndOperationDelegate(this.OnEndDepoDynamicXML);
            }
            if ((this.onDepoDynamicXMLCompletedDelegate == null)) {
                this.onDepoDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDepoDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginDepoDynamicXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDepoDynamicXMLDelegate, this.onDepoDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet DepoDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DepoDynamic(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDepoDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDepoDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndDepoDynamic(System.IAsyncResult result) {
            return base.Channel.EndDepoDynamic(result);
        }
        
        private System.IAsyncResult OnBeginDepoDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDepoDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDepoDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndDepoDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDepoDynamicCompleted(object state) {
            if ((this.DepoDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DepoDynamicCompleted(this, new DepoDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DepoDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DepoDynamicAsync(fromDate, ToDate, null);
        }
        
        public void DepoDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDepoDynamicDelegate == null)) {
                this.onBeginDepoDynamicDelegate = new BeginOperationDelegate(this.OnBeginDepoDynamic);
            }
            if ((this.onEndDepoDynamicDelegate == null)) {
                this.onEndDepoDynamicDelegate = new EndOperationDelegate(this.OnEndDepoDynamic);
            }
            if ((this.onDepoDynamicCompletedDelegate == null)) {
                this.onDepoDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDepoDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginDepoDynamicDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDepoDynamicDelegate, this.onDepoDynamicCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode OstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.OstatDynamicXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOstatDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOstatDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndOstatDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndOstatDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginOstatDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginOstatDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndOstatDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndOstatDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOstatDynamicXMLCompleted(object state) {
            if ((this.OstatDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OstatDynamicXMLCompleted(this, new OstatDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OstatDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        public void OstatDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginOstatDynamicXMLDelegate == null)) {
                this.onBeginOstatDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginOstatDynamicXML);
            }
            if ((this.onEndOstatDynamicXMLDelegate == null)) {
                this.onEndOstatDynamicXMLDelegate = new EndOperationDelegate(this.OnEndOstatDynamicXML);
            }
            if ((this.onOstatDynamicXMLCompletedDelegate == null)) {
                this.onOstatDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOstatDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginOstatDynamicXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndOstatDynamicXMLDelegate, this.onOstatDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet OstatDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.OstatDynamic(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOstatDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOstatDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndOstatDynamic(System.IAsyncResult result) {
            return base.Channel.EndOstatDynamic(result);
        }
        
        private System.IAsyncResult OnBeginOstatDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginOstatDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndOstatDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndOstatDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOstatDynamicCompleted(object state) {
            if ((this.OstatDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OstatDynamicCompleted(this, new OstatDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OstatDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.OstatDynamicAsync(fromDate, ToDate, null);
        }
        
        public void OstatDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginOstatDynamicDelegate == null)) {
                this.onBeginOstatDynamicDelegate = new BeginOperationDelegate(this.OnBeginOstatDynamic);
            }
            if ((this.onEndOstatDynamicDelegate == null)) {
                this.onEndOstatDynamicDelegate = new EndOperationDelegate(this.OnEndOstatDynamic);
            }
            if ((this.onOstatDynamicCompletedDelegate == null)) {
                this.onOstatDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOstatDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginOstatDynamicDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndOstatDynamicDelegate, this.onOstatDynamicCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode DragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DragMetDynamicXML(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDragMetDynamicXML(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDragMetDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndDragMetDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndDragMetDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginDragMetDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDragMetDynamicXML(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDragMetDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndDragMetDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDragMetDynamicXMLCompleted(object state) {
            if ((this.DragMetDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DragMetDynamicXMLCompleted(this, new DragMetDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DragMetDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DragMetDynamicXMLAsync(fromDate, ToDate, null);
        }
        
        public void DragMetDynamicXMLAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDragMetDynamicXMLDelegate == null)) {
                this.onBeginDragMetDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginDragMetDynamicXML);
            }
            if ((this.onEndDragMetDynamicXMLDelegate == null)) {
                this.onEndDragMetDynamicXMLDelegate = new EndOperationDelegate(this.OnEndDragMetDynamicXML);
            }
            if ((this.onDragMetDynamicXMLCompletedDelegate == null)) {
                this.onDragMetDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDragMetDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginDragMetDynamicXMLDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDragMetDynamicXMLDelegate, this.onDragMetDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet DragMetDynamic(System.DateTime fromDate, System.DateTime ToDate) {
            return base.Channel.DragMetDynamic(fromDate, ToDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDragMetDynamic(System.DateTime fromDate, System.DateTime ToDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDragMetDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndDragMetDynamic(System.IAsyncResult result) {
            return base.Channel.EndDragMetDynamic(result);
        }
        
        private System.IAsyncResult OnBeginDragMetDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime fromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            return this.BeginDragMetDynamic(fromDate, ToDate, callback, asyncState);
        }
        
        private object[] OnEndDragMetDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndDragMetDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDragMetDynamicCompleted(object state) {
            if ((this.DragMetDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DragMetDynamicCompleted(this, new DragMetDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DragMetDynamicAsync(System.DateTime fromDate, System.DateTime ToDate) {
            this.DragMetDynamicAsync(fromDate, ToDate, null);
        }
        
        public void DragMetDynamicAsync(System.DateTime fromDate, System.DateTime ToDate, object userState) {
            if ((this.onBeginDragMetDynamicDelegate == null)) {
                this.onBeginDragMetDynamicDelegate = new BeginOperationDelegate(this.OnBeginDragMetDynamic);
            }
            if ((this.onEndDragMetDynamicDelegate == null)) {
                this.onEndDragMetDynamicDelegate = new EndOperationDelegate(this.OnEndDragMetDynamic);
            }
            if ((this.onDragMetDynamicCompletedDelegate == null)) {
                this.onDragMetDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDragMetDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginDragMetDynamicDelegate, new object[] {
                        fromDate,
                        ToDate}, this.onEndDragMetDynamicDelegate, this.onDragMetDynamicCompletedDelegate, userState);
        }
        
        public System.DateTime GetLatestDateTime() {
            return base.Channel.GetLatestDateTime();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestDateTime(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestDateTime(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetLatestDateTime(System.IAsyncResult result) {
            return base.Channel.EndGetLatestDateTime(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestDateTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestDateTime(callback, asyncState);
        }
        
        private object[] OnEndGetLatestDateTime(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetLatestDateTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestDateTimeCompleted(object state) {
            if ((this.GetLatestDateTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestDateTimeCompleted(this, new GetLatestDateTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestDateTimeAsync() {
            this.GetLatestDateTimeAsync(null);
        }
        
        public void GetLatestDateTimeAsync(object userState) {
            if ((this.onBeginGetLatestDateTimeDelegate == null)) {
                this.onBeginGetLatestDateTimeDelegate = new BeginOperationDelegate(this.OnBeginGetLatestDateTime);
            }
            if ((this.onEndGetLatestDateTimeDelegate == null)) {
                this.onEndGetLatestDateTimeDelegate = new EndOperationDelegate(this.OnEndGetLatestDateTime);
            }
            if ((this.onGetLatestDateTimeCompletedDelegate == null)) {
                this.onGetLatestDateTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestDateTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestDateTimeDelegate, null, this.onEndGetLatestDateTimeDelegate, this.onGetLatestDateTimeCompletedDelegate, userState);
        }
        
        public string GetLatestDate() {
            return base.Channel.GetLatestDate();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetLatestDate(System.IAsyncResult result) {
            return base.Channel.EndGetLatestDate(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestDate(callback, asyncState);
        }
        
        private object[] OnEndGetLatestDate(System.IAsyncResult result) {
            string retVal = this.EndGetLatestDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestDateCompleted(object state) {
            if ((this.GetLatestDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestDateCompleted(this, new GetLatestDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestDateAsync() {
            this.GetLatestDateAsync(null);
        }
        
        public void GetLatestDateAsync(object userState) {
            if ((this.onBeginGetLatestDateDelegate == null)) {
                this.onBeginGetLatestDateDelegate = new BeginOperationDelegate(this.OnBeginGetLatestDate);
            }
            if ((this.onEndGetLatestDateDelegate == null)) {
                this.onEndGetLatestDateDelegate = new EndOperationDelegate(this.OnEndGetLatestDate);
            }
            if ((this.onGetLatestDateCompletedDelegate == null)) {
                this.onGetLatestDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestDateDelegate, null, this.onEndGetLatestDateDelegate, this.onGetLatestDateCompletedDelegate, userState);
        }
        
        public System.DateTime GetLatestDateTimeSeld() {
            return base.Channel.GetLatestDateTimeSeld();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestDateTimeSeld(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestDateTimeSeld(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.DateTime EndGetLatestDateTimeSeld(System.IAsyncResult result) {
            return base.Channel.EndGetLatestDateTimeSeld(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestDateTimeSeld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestDateTimeSeld(callback, asyncState);
        }
        
        private object[] OnEndGetLatestDateTimeSeld(System.IAsyncResult result) {
            System.DateTime retVal = this.EndGetLatestDateTimeSeld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestDateTimeSeldCompleted(object state) {
            if ((this.GetLatestDateTimeSeldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestDateTimeSeldCompleted(this, new GetLatestDateTimeSeldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestDateTimeSeldAsync() {
            this.GetLatestDateTimeSeldAsync(null);
        }
        
        public void GetLatestDateTimeSeldAsync(object userState) {
            if ((this.onBeginGetLatestDateTimeSeldDelegate == null)) {
                this.onBeginGetLatestDateTimeSeldDelegate = new BeginOperationDelegate(this.OnBeginGetLatestDateTimeSeld);
            }
            if ((this.onEndGetLatestDateTimeSeldDelegate == null)) {
                this.onEndGetLatestDateTimeSeldDelegate = new EndOperationDelegate(this.OnEndGetLatestDateTimeSeld);
            }
            if ((this.onGetLatestDateTimeSeldCompletedDelegate == null)) {
                this.onGetLatestDateTimeSeldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestDateTimeSeldCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestDateTimeSeldDelegate, null, this.onEndGetLatestDateTimeSeldDelegate, this.onGetLatestDateTimeSeldCompletedDelegate, userState);
        }
        
        public string GetLatestDateSeld() {
            return base.Channel.GetLatestDateSeld();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLatestDateSeld(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestDateSeld(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetLatestDateSeld(System.IAsyncResult result) {
            return base.Channel.EndGetLatestDateSeld(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestDateSeld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetLatestDateSeld(callback, asyncState);
        }
        
        private object[] OnEndGetLatestDateSeld(System.IAsyncResult result) {
            string retVal = this.EndGetLatestDateSeld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestDateSeldCompleted(object state) {
            if ((this.GetLatestDateSeldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestDateSeldCompleted(this, new GetLatestDateSeldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestDateSeldAsync() {
            this.GetLatestDateSeldAsync(null);
        }
        
        public void GetLatestDateSeldAsync(object userState) {
            if ((this.onBeginGetLatestDateSeldDelegate == null)) {
                this.onBeginGetLatestDateSeldDelegate = new BeginOperationDelegate(this.OnBeginGetLatestDateSeld);
            }
            if ((this.onEndGetLatestDateSeldDelegate == null)) {
                this.onEndGetLatestDateSeldDelegate = new EndOperationDelegate(this.OnEndGetLatestDateSeld);
            }
            if ((this.onGetLatestDateSeldCompletedDelegate == null)) {
                this.onGetLatestDateSeldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestDateSeldCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestDateSeldDelegate, null, this.onEndGetLatestDateSeldDelegate, this.onGetLatestDateSeldCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode EnumValutesXML(bool Seld) {
            return base.Channel.EnumValutesXML(Seld);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEnumValutesXML(bool Seld, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnumValutesXML(Seld, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndEnumValutesXML(System.IAsyncResult result) {
            return base.Channel.EndEnumValutesXML(result);
        }
        
        private System.IAsyncResult OnBeginEnumValutesXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool Seld = ((bool)(inValues[0]));
            return this.BeginEnumValutesXML(Seld, callback, asyncState);
        }
        
        private object[] OnEndEnumValutesXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndEnumValutesXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnumValutesXMLCompleted(object state) {
            if ((this.EnumValutesXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnumValutesXMLCompleted(this, new EnumValutesXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnumValutesXMLAsync(bool Seld) {
            this.EnumValutesXMLAsync(Seld, null);
        }
        
        public void EnumValutesXMLAsync(bool Seld, object userState) {
            if ((this.onBeginEnumValutesXMLDelegate == null)) {
                this.onBeginEnumValutesXMLDelegate = new BeginOperationDelegate(this.OnBeginEnumValutesXML);
            }
            if ((this.onEndEnumValutesXMLDelegate == null)) {
                this.onEndEnumValutesXMLDelegate = new EndOperationDelegate(this.OnEndEnumValutesXML);
            }
            if ((this.onEnumValutesXMLCompletedDelegate == null)) {
                this.onEnumValutesXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumValutesXMLCompleted);
            }
            base.InvokeAsync(this.onBeginEnumValutesXMLDelegate, new object[] {
                        Seld}, this.onEndEnumValutesXMLDelegate, this.onEnumValutesXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet EnumValutes(bool Seld) {
            return base.Channel.EnumValutes(Seld);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginEnumValutes(bool Seld, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnumValutes(Seld, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndEnumValutes(System.IAsyncResult result) {
            return base.Channel.EndEnumValutes(result);
        }
        
        private System.IAsyncResult OnBeginEnumValutes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool Seld = ((bool)(inValues[0]));
            return this.BeginEnumValutes(Seld, callback, asyncState);
        }
        
        private object[] OnEndEnumValutes(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndEnumValutes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnumValutesCompleted(object state) {
            if ((this.EnumValutesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnumValutesCompleted(this, new EnumValutesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnumValutesAsync(bool Seld) {
            this.EnumValutesAsync(Seld, null);
        }
        
        public void EnumValutesAsync(bool Seld, object userState) {
            if ((this.onBeginEnumValutesDelegate == null)) {
                this.onBeginEnumValutesDelegate = new BeginOperationDelegate(this.OnBeginEnumValutes);
            }
            if ((this.onEndEnumValutesDelegate == null)) {
                this.onEndEnumValutesDelegate = new EndOperationDelegate(this.OnEndEnumValutes);
            }
            if ((this.onEnumValutesCompletedDelegate == null)) {
                this.onEnumValutesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnumValutesCompleted);
            }
            base.InvokeAsync(this.onBeginEnumValutesDelegate, new object[] {
                        Seld}, this.onEndEnumValutesDelegate, this.onEnumValutesCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode GetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            return base.Channel.GetCursDynamicXML(FromDate, ToDate, ValutaCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCursDynamicXML(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCursDynamicXML(FromDate, ToDate, ValutaCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndGetCursDynamicXML(System.IAsyncResult result) {
            return base.Channel.EndGetCursDynamicXML(result);
        }
        
        private System.IAsyncResult OnBeginGetCursDynamicXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime FromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            string ValutaCode = ((string)(inValues[2]));
            return this.BeginGetCursDynamicXML(FromDate, ToDate, ValutaCode, callback, asyncState);
        }
        
        private object[] OnEndGetCursDynamicXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndGetCursDynamicXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCursDynamicXMLCompleted(object state) {
            if ((this.GetCursDynamicXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCursDynamicXMLCompleted(this, new GetCursDynamicXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            this.GetCursDynamicXMLAsync(FromDate, ToDate, ValutaCode, null);
        }
        
        public void GetCursDynamicXMLAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, object userState) {
            if ((this.onBeginGetCursDynamicXMLDelegate == null)) {
                this.onBeginGetCursDynamicXMLDelegate = new BeginOperationDelegate(this.OnBeginGetCursDynamicXML);
            }
            if ((this.onEndGetCursDynamicXMLDelegate == null)) {
                this.onEndGetCursDynamicXMLDelegate = new EndOperationDelegate(this.OnEndGetCursDynamicXML);
            }
            if ((this.onGetCursDynamicXMLCompletedDelegate == null)) {
                this.onGetCursDynamicXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCursDynamicXMLCompleted);
            }
            base.InvokeAsync(this.onBeginGetCursDynamicXMLDelegate, new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, this.onEndGetCursDynamicXMLDelegate, this.onGetCursDynamicXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            return base.Channel.GetCursDynamic(FromDate, ToDate, ValutaCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCursDynamic(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCursDynamic(FromDate, ToDate, ValutaCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetCursDynamic(System.IAsyncResult result) {
            return base.Channel.EndGetCursDynamic(result);
        }
        
        private System.IAsyncResult OnBeginGetCursDynamic(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime FromDate = ((System.DateTime)(inValues[0]));
            System.DateTime ToDate = ((System.DateTime)(inValues[1]));
            string ValutaCode = ((string)(inValues[2]));
            return this.BeginGetCursDynamic(FromDate, ToDate, ValutaCode, callback, asyncState);
        }
        
        private object[] OnEndGetCursDynamic(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetCursDynamic(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCursDynamicCompleted(object state) {
            if ((this.GetCursDynamicCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCursDynamicCompleted(this, new GetCursDynamicCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode) {
            this.GetCursDynamicAsync(FromDate, ToDate, ValutaCode, null);
        }
        
        public void GetCursDynamicAsync(System.DateTime FromDate, System.DateTime ToDate, string ValutaCode, object userState) {
            if ((this.onBeginGetCursDynamicDelegate == null)) {
                this.onBeginGetCursDynamicDelegate = new BeginOperationDelegate(this.OnBeginGetCursDynamic);
            }
            if ((this.onEndGetCursDynamicDelegate == null)) {
                this.onEndGetCursDynamicDelegate = new EndOperationDelegate(this.OnEndGetCursDynamic);
            }
            if ((this.onGetCursDynamicCompletedDelegate == null)) {
                this.onGetCursDynamicCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCursDynamicCompleted);
            }
            base.InvokeAsync(this.onBeginGetCursDynamicDelegate, new object[] {
                        FromDate,
                        ToDate,
                        ValutaCode}, this.onEndGetCursDynamicDelegate, this.onGetCursDynamicCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode GetCursOnDateXML(System.DateTime On_date) {
            return base.Channel.GetCursOnDateXML(On_date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCursOnDateXML(On_date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndGetCursOnDateXML(System.IAsyncResult result) {
            return base.Channel.EndGetCursOnDateXML(result);
        }
        
        private System.IAsyncResult OnBeginGetCursOnDateXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime On_date = ((System.DateTime)(inValues[0]));
            return this.BeginGetCursOnDateXML(On_date, callback, asyncState);
        }
        
        private object[] OnEndGetCursOnDateXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndGetCursOnDateXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCursOnDateXMLCompleted(object state) {
            if ((this.GetCursOnDateXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCursOnDateXMLCompleted(this, new GetCursOnDateXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetCursOnDateXMLAsync(On_date, null);
        }
        
        public void GetCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.onBeginGetCursOnDateXMLDelegate == null)) {
                this.onBeginGetCursOnDateXMLDelegate = new BeginOperationDelegate(this.OnBeginGetCursOnDateXML);
            }
            if ((this.onEndGetCursOnDateXMLDelegate == null)) {
                this.onEndGetCursOnDateXMLDelegate = new EndOperationDelegate(this.OnEndGetCursOnDateXML);
            }
            if ((this.onGetCursOnDateXMLCompletedDelegate == null)) {
                this.onGetCursOnDateXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCursOnDateXMLCompleted);
            }
            base.InvokeAsync(this.onBeginGetCursOnDateXMLDelegate, new object[] {
                        On_date}, this.onEndGetCursOnDateXMLDelegate, this.onGetCursOnDateXMLCompletedDelegate, userState);
        }
        
        public System.Xml.XmlNode GetSeldCursOnDateXML(System.DateTime On_date) {
            return base.Channel.GetSeldCursOnDateXML(On_date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeldCursOnDateXML(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeldCursOnDateXML(On_date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Xml.XmlNode EndGetSeldCursOnDateXML(System.IAsyncResult result) {
            return base.Channel.EndGetSeldCursOnDateXML(result);
        }
        
        private System.IAsyncResult OnBeginGetSeldCursOnDateXML(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime On_date = ((System.DateTime)(inValues[0]));
            return this.BeginGetSeldCursOnDateXML(On_date, callback, asyncState);
        }
        
        private object[] OnEndGetSeldCursOnDateXML(System.IAsyncResult result) {
            System.Xml.XmlNode retVal = this.EndGetSeldCursOnDateXML(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeldCursOnDateXMLCompleted(object state) {
            if ((this.GetSeldCursOnDateXMLCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeldCursOnDateXMLCompleted(this, new GetSeldCursOnDateXMLCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeldCursOnDateXMLAsync(System.DateTime On_date) {
            this.GetSeldCursOnDateXMLAsync(On_date, null);
        }
        
        public void GetSeldCursOnDateXMLAsync(System.DateTime On_date, object userState) {
            if ((this.onBeginGetSeldCursOnDateXMLDelegate == null)) {
                this.onBeginGetSeldCursOnDateXMLDelegate = new BeginOperationDelegate(this.OnBeginGetSeldCursOnDateXML);
            }
            if ((this.onEndGetSeldCursOnDateXMLDelegate == null)) {
                this.onEndGetSeldCursOnDateXMLDelegate = new EndOperationDelegate(this.OnEndGetSeldCursOnDateXML);
            }
            if ((this.onGetSeldCursOnDateXMLCompletedDelegate == null)) {
                this.onGetSeldCursOnDateXMLCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeldCursOnDateXMLCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeldCursOnDateXMLDelegate, new object[] {
                        On_date}, this.onEndGetSeldCursOnDateXMLDelegate, this.onGetSeldCursOnDateXMLCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetSeldCursOnDate(System.DateTime On_date) {
            return base.Channel.GetSeldCursOnDate(On_date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSeldCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeldCursOnDate(On_date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetSeldCursOnDate(System.IAsyncResult result) {
            return base.Channel.EndGetSeldCursOnDate(result);
        }
        
        private System.IAsyncResult OnBeginGetSeldCursOnDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime On_date = ((System.DateTime)(inValues[0]));
            return this.BeginGetSeldCursOnDate(On_date, callback, asyncState);
        }
        
        private object[] OnEndGetSeldCursOnDate(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetSeldCursOnDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeldCursOnDateCompleted(object state) {
            if ((this.GetSeldCursOnDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeldCursOnDateCompleted(this, new GetSeldCursOnDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeldCursOnDateAsync(System.DateTime On_date) {
            this.GetSeldCursOnDateAsync(On_date, null);
        }
        
        public void GetSeldCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.onBeginGetSeldCursOnDateDelegate == null)) {
                this.onBeginGetSeldCursOnDateDelegate = new BeginOperationDelegate(this.OnBeginGetSeldCursOnDate);
            }
            if ((this.onEndGetSeldCursOnDateDelegate == null)) {
                this.onEndGetSeldCursOnDateDelegate = new EndOperationDelegate(this.OnEndGetSeldCursOnDate);
            }
            if ((this.onGetSeldCursOnDateCompletedDelegate == null)) {
                this.onGetSeldCursOnDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeldCursOnDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeldCursOnDateDelegate, new object[] {
                        On_date}, this.onEndGetSeldCursOnDateDelegate, this.onGetSeldCursOnDateCompletedDelegate, userState);
        }
        
        public System.Data.DataSet GetCursOnDate(System.DateTime On_date) {
            return base.Channel.GetCursOnDate(On_date);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCursOnDate(System.DateTime On_date, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCursOnDate(On_date, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.Data.DataSet EndGetCursOnDate(System.IAsyncResult result) {
            return base.Channel.EndGetCursOnDate(result);
        }
        
        private System.IAsyncResult OnBeginGetCursOnDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime On_date = ((System.DateTime)(inValues[0]));
            return this.BeginGetCursOnDate(On_date, callback, asyncState);
        }
        
        private object[] OnEndGetCursOnDate(System.IAsyncResult result) {
            System.Data.DataSet retVal = this.EndGetCursOnDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCursOnDateCompleted(object state) {
            if ((this.GetCursOnDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCursOnDateCompleted(this, new GetCursOnDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCursOnDateAsync(System.DateTime On_date) {
            this.GetCursOnDateAsync(On_date, null);
        }
        
        public void GetCursOnDateAsync(System.DateTime On_date, object userState) {
            if ((this.onBeginGetCursOnDateDelegate == null)) {
                this.onBeginGetCursOnDateDelegate = new BeginOperationDelegate(this.OnBeginGetCursOnDate);
            }
            if ((this.onEndGetCursOnDateDelegate == null)) {
                this.onEndGetCursOnDateDelegate = new EndOperationDelegate(this.OnEndGetCursOnDate);
            }
            if ((this.onGetCursOnDateCompletedDelegate == null)) {
                this.onGetCursOnDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCursOnDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetCursOnDateDelegate, new object[] {
                        On_date}, this.onEndGetCursOnDateDelegate, this.onGetCursOnDateCompletedDelegate, userState);
        }
    }
}
